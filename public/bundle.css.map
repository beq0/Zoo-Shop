{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "..\\DetailedProducts.svelte",
    "..\\Header.svelte",
    "..\\ParameterModal.svelte",
    "..\\ProductModal.svelte",
    "..\\SellModal.svelte",
    "..\\WarningModal.svelte",
    "..\\History.route.svelte",
    "..\\Home.route.svelte",
    "..\\Parameter.route.svelte",
    "..\\Product.route.svelte"
  ],
  "sourcesContent": [
    "<script>\r\n    import { onMount } from 'svelte';\r\n\r\n    export let show = false, products = {};\r\n\r\n    onMount(() => {\r\n        addEventListener(\"keyup\", (event) => {\r\n            if (show && event.key === 'Escape') {\r\n                onClose();\r\n            }\r\n        });\r\n    });\r\n    \r\n    function onClose() {\r\n        show = false;\r\n    }\r\n\r\n</script>\r\n  \r\n<style>\r\n  \r\n    .closeButton {\r\n        background: #3cb5cf !important;\r\n        border-color: #3cb5cf !important;\r\n    }\r\n\r\n    .amounts {\r\n        max-height: 400px;\r\n        overflow-y: scroll;\r\n        font-size: 17px;\r\n    }\r\n    \r\n    .product-name {\r\n        font-weight: bold;\r\n    }\r\n\r\n</style>\r\n  \r\n{#if show}\r\n    <div class=\"popup active\" id=\"popup-1\">\r\n        <div class=\"overlay\" on:click={onClose}></div>\r\n            <div class=\"content\">  \r\n                <h5 class=\"modal-title\">დეტალური რაოდენობები:</h5>\r\n                <div class=\"amounts\">\r\n                    {#each Object.keys(products) as productName, i}\r\n                        <div><span class=\"product-name\">{productName}: </span>{products[productName]}</div>\r\n                    {/each}\r\n                </div>\r\n                <hr>\r\n                <div>\r\n                    <button class=\"btn btn-primary closeButton\" on:click={onClose}>დახურვა</button>\r\n                </div>\r\n        </div>\r\n    </div>\r\n{/if}",
    "<script>\r\n    import {link} from \"svelte-routing\";\r\n    import {DeviceDetectorService} from \"../services/deviceDetector.service\";\r\n\r\n    let pathName = '/home';\r\n    export let showToolbar;\r\n  \r\n    $: {\r\n        if(DeviceDetectorService.isBrowser) {\r\n            pathName = window.location.pathname;\r\n        }\r\n    }\r\n    \r\n</script>\r\n\r\n<style>\r\n    #mainHeader {\r\n        width: 100%;\r\n        background-color: #42ceeb;\r\n    }\r\n\r\n    #pills-tab {\r\n        margin: 0px !important;\r\n    }\r\n\r\n    .nav-link {\r\n        background-color: #42ceeb;\r\n        color: white;\r\n    }\r\n    \r\n    .active {\r\n        background-color: #3cb5cf !important;\r\n    }\r\n\r\n    .nav {\r\n        display: flex;\r\n        align-items: center;\r\n    }\r\n\r\n    .lastItem {\r\n        margin-right: auto;\r\n    }\r\n \r\n    .filterImage {\r\n        margin-right: 5px;\r\n    }\r\n</style>\r\n\r\n<div id=\"mainHeader\">\r\n    <ul class=\"nav nav-pills mb-3\" id=\"pills-tab\" role=\"tablist\">\r\n\r\n    <li class=\"nav-item\">\r\n        <a class=\"{'nav-link ' + (pathName === '/home' ? 'active' : '')}\" id=\"pills-home-tab\" data-toggle=\"pill\" href=\"home\" role=\"tab\" aria-controls=\"home\" use:link\r\n        on:click={() => pathName='/home'}>მთავარი</a>\r\n    </li>\r\n\r\n    <li class=\"nav-item\">\r\n        <a class=\"{'nav-link ' + (pathName === '/products' ? 'active' : '')}\" id=\"pills-profile-tab\" data-toggle=\"pill\" href=\"products\" role=\"tab\" aria-controls=\"products\" use:link\r\n        on:click={() => pathName='/products'}>პროდუქტები</a>\r\n    </li>\r\n\r\n    <li class=\"nav-item\">\r\n        <a class=\"{'nav-link ' + (pathName === '/history' ? 'active' : '')}\" id=\"pills-contact-tab\" data-toggle=\"pill\" href=\"history\" role=\"tab\" aria-controls=\"histroy\" use:link\r\n        on:click={() => pathName='/history'}>ისტორია</a>\r\n    </li>\r\n\r\n    <li class=\"nav-item lastItem\">\r\n        <a class=\"{'nav-link ' + (pathName === '/parameter' ? 'active' : '')}\" id=\"pills-contact-tab\" data-toggle=\"pill\" href=\"parameter\" role=\"tab\" aria-controls=\"parameter\" use:link\r\n        on:click={() => pathName='/parameter'}>პარამეტრები</a>\r\n    </li>\r\n\r\n    {#if pathName === '/products' || pathName === '/history' || pathName === '/parameter'}\r\n    <li>\r\n        <div>\r\n            <!-- svelte-ignore a11y-missing-attribute -->\r\n            <input class=\"filterImage\" type=\"image\" \r\n            src=\"images/showFilter.png\" width=\"27px\" height=\"27px\" on:click={()=>showToolbar=!showToolbar}>\r\n        </div>\r\n    </li>\r\n    {/if}\r\n    </ul>\r\n</div>",
    "<script>\r\n    import { ParameterService } from \"../services/parameter.service\";\r\n    import { onMount } from 'svelte';\r\n    import WarningModal from './WarningModal.svelte'\r\n  \r\n    const ParameterType = {\r\n        INTEGER: \"რიცხვი\",\r\n        STRING: \"ტექსტი\",\r\n        LIST: \"სია\"\r\n    }\r\n  \r\n    export let show, title = 'დამატება', submited = false, isChange;\r\n    export let _id, name = null, description = null, parameterType = ParameterType.INTEGER, value = null;\r\n  \r\n    let showWarningModal = false, warningModalMessage = '';\r\n    \r\n    onMount(() => {\r\n        addEventListener(\"keyup\", (event) => {\r\n            if (show && event.key === 'Enter') {\r\n                onSubmit();\r\n            }\r\n            if (show && event.key === 'Escape') {\r\n                onClose();\r\n            }\r\n        });\r\n    });\r\n    \r\n    const parameterService = ParameterService.getInstance();\r\n  \r\n    async function onSubmit() {\r\n        let updatedParameter = {\r\n            _id,\r\n            name,\r\n            description,\r\n            parameterType,\r\n            value\r\n        }\r\n\r\n        if (name && parameterType) {\r\n            let res = null;\r\n            if (!isChange) res = await parameterService.addParameter(updatedParameter);\r\n            else res = await parameterService.changeParameter(updatedParameter);\r\n\r\n            if (res.status === 200) {\r\n                show = false;\r\n                submited = true;\r\n                _id = res._id;\r\n            } else {\r\n                warningModalMessage = 'დაფიქსირდა შეცდომა პარამეტრის ' + (isChange ? 'რედაქტირების' : 'დამატების') + ' დროს!';\r\n                showWarningModal = true;\r\n            }\r\n        }\r\n    }\r\n  \r\n    function onClose() {\r\n        _id = null;\r\n        name = null;\r\n        description = null;\r\n        parameterType = ParameterType.INTEGER;\r\n        value = null;\r\n        show = false;\r\n    }\r\n    \r\n</script>\r\n  \r\n<style>\r\n    \r\n    .form-group {\r\n        display: flex;\r\n        justify-content: flex-end;\r\n        align-items: center;\r\n    }\r\n  \r\n    .form-control {\r\n        width: 300px;\r\n    }\r\n  \r\n</style>\r\n  \r\n{#if show}\r\n<div class=\"popup active\" id=\"popup-1\">\r\n    <div class=\"overlay\" on:click={onClose}></div>\r\n        <div class=\"content\">  \r\n            <h5 class=\"modal-title\">პარამეტრის {title}</h5>\r\n            <hr>\r\n            <div class=\"form-group\">\r\n                <div>სახელი:&emsp;</div>\r\n                <input type=\"text\" class=\"form-control\" bind:value={name}>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <div>აღწერა:&emsp;</div>\r\n                <input type=\"text\" class=\"form-control\" bind:value={description}>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <div>ტიპი:&emsp;</div>\r\n                <select class=\"form-control\" bind:value={parameterType}>\r\n                    {#each Object.values(ParameterType) as parameterType}\r\n                        <option>{parameterType}</option>\r\n                    {/each}\r\n                </select>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <div>მნიშვნელობა:&emsp;</div>\r\n                <input type=\"text\" class=\"form-control\" bind:value={value}>\r\n            </div>\r\n            <hr>\r\n            <div>\r\n                <button class=\"btn btn-primary confirmButton\" on:click={onSubmit}>დასტური</button>\r\n                <button class=\"btn btn-primary closeButton\" on:click={onClose}>დახურვა</button>\r\n            </div>\r\n    </div>\r\n</div>\r\n{/if}\r\n\r\n\r\n<WarningModal\r\nbind:show={showWarningModal}\r\nbind:message={warningModalMessage}\r\n/>",
    "<script>\r\n  import {ProductService} from \"../services/product.service\";\r\n  import { ParameterService } from \"../services/parameter.service\";\r\n  import { onMount } from 'svelte';\r\n  import WarningModal from './WarningModal.svelte'\r\n\r\n  const ParameterType = {\r\n    INTEGER: \"რიცხვი\",\r\n    STRING: \"ტექსტი\",\r\n    LIST: \"სია\"\r\n  }\r\n\r\n  let ProductType = [\r\n    \"სხვა\"\r\n  ]\r\n\r\n  const QuanitityType = {\r\n    COUNT: \"რაოდენობითი\",\r\n    WEIGHT: \"წონითი\"\r\n  }\r\n\r\n  export let show;\r\n  export let title = 'დამატება';\r\n  export let _id, productCode = null, name = \"\", productType = ProductType[0], \r\n          sellingPrice = null, originalPrice = null, quantity = null, quantityType = QuanitityType.COUNT;\r\n  export let submited = false;\r\n  export let isChange;\r\n\r\n  const productService = ProductService.getInstance();\r\n  const parameterService = ParameterService.getInstance();\r\n\r\n  let showWarningModal = false, warningModalMessage = '';\r\n  \r\n  onMount(() => {\r\n    addEventListener(\"keyup\", (event) => {\r\n      if (show && event.key === 'Enter') {\r\n        onSubmit();\r\n      }\r\n      if (show && event.key === 'Escape') {\r\n        onClose();\r\n      }\r\n    });\r\n\r\n    initializeParameters()\r\n  });\r\n\r\n  async function initializeParameters() {\r\n    let res = await parameterService.getParameter(\"productTypes\", ParameterType.LIST, [\"სხვა\"]);\r\n    ProductType = ('' + res.value).split(\",\");\r\n  }\r\n  \r\n  async function onSubmit() {\r\n    let updatedProduct = {\r\n      _id,\r\n      code: productCode,\r\n      name,\r\n      productType,\r\n      sellingPrice,\r\n      originalPrice,\r\n      quantity,\r\n      quantityType\r\n    }\r\n    if (name && productType && quantity != null && sellingPrice != null && originalPrice != null) {\r\n      let res = null\r\n      if (!isChange) res = await productService.addProduct(updatedProduct);\r\n      else res = await productService.changeProduct(updatedProduct)\r\n      if (res.status === 200) {\r\n        show=false;\r\n        submited = true;\r\n        _id = res._id;\r\n      } else {\r\n        warningModalMessage = 'დაფიქსირდა შეცდომა პროდუქტის ' + (isChange ? 'რედაქტირების' : 'დამატების') + ' დროს!';\r\n        showWarningModal = true;\r\n      }\r\n    }\r\n  }\r\n\r\n  function onClose() {\r\n    show = false;\r\n    _id = null\r\n    productCode = null\r\n    name = null;\r\n    productType = ProductType[0];\r\n    sellingPrice = null;\r\n    originalPrice = null;\r\n    quantity = null;\r\n    quantityType = QuanitityType.COUNT; \r\n  }\r\n\r\n  \r\n  \r\n</script>\r\n\r\n<style>\r\n  \r\n  .form-group {\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    align-items: center;\r\n  }\r\n\r\n  .form-control {\r\n    width: 300px;\r\n  }\r\n\r\n</style>\r\n\r\n{#if show}\r\n<div class=\"popup active\" id=\"popup-1\">\r\n  <div class=\"overlay\" on:click={onClose}></div>\r\n    <div class=\"content\">  \r\n    <h5 class=\"modal-title\">პროდუქტის {title}</h5>\r\n    <hr>\r\n    <div class=\"form-group\">\r\n      <div>კოდი:&emsp;</div>\r\n      <input type=\"text\" class=\"form-control\" id=\"productCode\" bind:value={productCode}>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <div>სახელი:&emsp;</div>\r\n      <input type=\"text\" class=\"form-control\" id=\"name\" bind:value={name}>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <div>ტიპი:&emsp;</div>\r\n      <select class=\"form-control\" bind:value={productType}>\r\n        {#each Object.values(ProductType) as productType}\r\n        <option>{productType}</option>\r\n        {/each}\r\n      </select>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <div>გაყიდვის&nbsp;ფასი:&emsp;</div>\r\n      <input type=\"number\" class=\"form-control\" id=\"sellPrice\" bind:value={sellingPrice}>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <div>ყიდვის&nbsp;ფასი:&emsp;</div>\r\n      <input type=\"number\" class=\"form-control\" id=\"buyPrice\" bind:value={originalPrice}>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <div>რაოდენობა:&emsp;</div>\r\n      <input type=\"number\" class=\"form-control\" id=\"amount\" bind:value={quantity}>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <div>რაოდ. ტიპი:&emsp;</div>\r\n      <select class=\"form-control\" bind:value={quantityType}>\r\n        {#each Object.values(QuanitityType) as quantityType}\r\n        <option>{quantityType}</option>\r\n        {/each}\r\n      </select>\r\n    </div>\r\n    <hr>\r\n    <div>\r\n      <button class=\"btn btn-primary confirmButton\" on:click={onSubmit}>დასტური</button>\r\n      <button class=\"btn btn-primary closeButton\" on:click={onClose}>დახურვა</button>\r\n    </div>\r\n  </div>\r\n</div>\r\n{/if}\r\n\r\n\r\n<WarningModal\r\nbind:show={showWarningModal}\r\nbind:message={warningModalMessage}\r\n/>",
    "<script>\r\n    import {ProductService} from \"../services/product.service\";\r\n    import {HistoryService} from \"../services/history.service\";\r\n    import { onMount } from 'svelte';\r\n    import WarningModal from './WarningModal.svelte';\r\n\r\n    const QuanitityType = {\r\n      COUNT: \"რაოდენობითი\",\r\n      WEIGHT: \"წონითი\"\r\n    }\r\n\r\n    export let show = false, _id, productCode = '', productName = '', productType = '', amount = null, quantity = null,\r\n    quantityType = QuantityType.COUNT, submited = false, originalPrice = null, sellingPrice = null;\r\n\r\n    let amountChanged = false, fullPriceChanged = false, sellingPriceChanged = false;\r\n    let fullPrice = null;\r\n    let showWarningModal = false, warningModalMessage = '';\r\n    const date = new Date();\r\n    let sellDate = date.getFullYear() + \"-\" + (date.getMonth() + 1) + \"-\" + date.getDate();\r\n\r\n    const productService = ProductService.getInstance();\r\n    const historyService = HistoryService.getInstance();\r\n\r\n    onMount(() => {\r\n      addEventListener(\"keyup\", (event) => {\r\n        if (show && event.key === 'Enter') {\r\n          onSubmit();\r\n        }\r\n        if (show && event.key === 'Escape') {\r\n          onClose();\r\n        }\r\n      });\r\n    });\r\n\r\n    function isCountType() {\r\n      return quantityType == QuanitityType.COUNT;\r\n    }\r\n\r\n    function isInt(n) {\r\n      return n % 1 === 0;\r\n    }\r\n\r\n    function getDecimalPoints(n) {\r\n      if (n == null) return 0;\r\n      let stringNumber = n.toString();\r\n      if (!stringNumber.includes('.')) return 0;\r\n      return stringNumber.length - (stringNumber.indexOf('.') + 1);\r\n    }\r\n    \r\n    function onClose() {\r\n        _id = null;\r\n        productName = null;\r\n        amount = null;\r\n        fullPrice = null;\r\n        show = false;\r\n    }\r\n\r\n    async function onSubmit() {\r\n        if(!amount) return;\r\n        let updatedProduct = {\r\n            _id: _id,\r\n            quantity: quantity - amount,\r\n        }\r\n        let res = await productService.changeProduct(updatedProduct);\r\n        if (res.status === 200) {\r\n          // TODO! აქ დასამატებელი იქნება ისტორიის დამატებისას ხომ არ მოხდა შეცდომა\r\n          addSellHistory();\r\n          show=false;\r\n          submited = true;\r\n          _id = res._id;\r\n          quantity -= amount;\r\n          amount = null;\r\n        } else {\r\n          warningModalMessage = 'დაფიქსირდა შეცდომა პროდუქტისთვის რაოდენობის დაკლების დროს!'\r\n          showWarningModal = true;\r\n          return;\r\n        }\r\n    }\r\n\r\n    function addSellHistory() {\r\n      let history = {\r\n        productCode,\r\n        productId: _id,\r\n        productName,\r\n        productType,\r\n        amount,\r\n        originalPrice,\r\n        sellingPrice,\r\n        sellDate\r\n      }\r\n      historyService.addHistory(history);\r\n    }\r\n\r\n    $: {\r\n      \r\n      if (amountChanged) {\r\n        console.log(\"asd\");\r\n        // if the amount is less than 0 or more than the available quantity, fix it\r\n        if (amount < 0) {\r\n          amount = 0;\r\n        } else if ((quantity || quantity == 0) && quantity - amount <= 0) {\r\n          amount = quantity;\r\n        }\r\n\r\n        // if the amount is not the integer and the product's quantity type is COUNT, floor the amount\r\n        if (isCountType() && !isInt(amount)) {\r\n          amount = Math.floor(amount);\r\n        }\r\n        \r\n        // if the amount's decimal points are more than 3, fix it to 3\r\n        if (!isCountType() && getDecimalPoints(amount) > 3) {\r\n          amount = amount.toFixed(3);\r\n        }\r\n        fullPrice = getFullPrice();\r\n        amountChanged = false;\r\n        console.log(fullPrice, amount);\r\n      }\r\n\r\n      if (fullPriceChanged) {\r\n        console.log(\"dsa\");\r\n        amount = getAmount();\r\n        fullPriceChanged = false;\r\n      }\r\n\r\n      if (sellingPriceChanged) {\r\n        fullPrice = getFullPrice();\r\n        sellingPriceChanged = false;\r\n      }\r\n      \r\n    }\r\n\r\n    function getFullPrice() {\r\n      return (amount * sellingPrice).toFixed(2);\r\n    }\r\n\r\n    function getAmount() {\r\n      let result = fullPrice / sellingPrice;\r\n      if (isCountType()) result = Math.floor(result);\r\n      else result = result.toFixed(3);\r\n      return result;\r\n    }\r\n\r\n  </script>\r\n  \r\n  <style>\r\n    \r\n    .form-group {\r\n      display: flex;\r\n      justify-content: flex-end;\r\n      align-items: center;\r\n    }\r\n  \r\n    .form-control {\r\n      width: 300px;\r\n    }\r\n  \r\n  </style>\r\n  \r\n  {#if show}\r\n  <div class=\"popup active\" id=\"popup-1\">\r\n    <div class=\"overlay\" on:click={onClose}></div>\r\n        <div class=\"content\">  \r\n        <h5 class=\"modal-title\">პროდუქტ {productName}(ი)ს გაყიდვა</h5>\r\n        <hr>\r\n        <div class=\"form-group\">\r\n          <div>რაოდენობა:&emsp;</div>\r\n          <input type=\"number\" class=\"form-control\" id=\"amount\" bind:value={amount} on:input={() => {amountChanged = true}} placeholder={isCountType() ? 'ცალობითი რაოდენობა' : 'წონითი რაოდენობა'}>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <div>ჯამური ფასი:&emsp;</div>\r\n          <input type=\"number\" class=\"form-control\" id=\"amount\" bind:value={fullPrice} on:input={() => {fullPriceChanged = true}}>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <div>ფასი:&emsp;</div>\r\n          <input type=\"number\" class=\"form-control\" id=\"amount\" bind:value={sellingPrice} on:input={() => {sellingPriceChanged = true}}>\r\n        </div>\r\n        \r\n        <div class=\"form-group\">\r\n          <div>თარიღი:&emsp;</div>\r\n          <input type=\"date\" class=\"form-control\" id=\"amount\" bind:value={sellDate}>\r\n        </div>\r\n        <hr>\r\n        <div>\r\n            <button class=\"btn btn-primary confirmButton\" on:click={onSubmit}>დასტური</button>\r\n            <button class=\"btn btn-primary closeButton\" on:click={onClose}>დახურვა</button>\r\n        </div>\r\n    </div>\r\n  </div>\r\n  {/if}\r\n\r\n\r\n<WarningModal\r\nbind:show={showWarningModal}\r\nbind:message={warningModalMessage}\r\n/>",
    "<script>\r\n    import { onMount } from 'svelte';\r\n\r\n    export let show = false, message;\r\n\r\n    onMount(() => {\r\n        addEventListener(\"keyup\", (event) => {\r\n            if (show && event.key === 'Escape') {\r\n                onClose();\r\n            }\r\n        });\r\n    });\r\n    \r\n    function onClose() {\r\n        message = '';\r\n        show = false;\r\n    }\r\n\r\n</script>\r\n  \r\n<style>\r\n\r\n    .closeButton {\r\n        background: #3cb5cf !important;\r\n        border-color: #3cb5cf !important;\r\n    }\r\n    \r\n    .content {\r\n        color: red;\r\n    }\r\n  \r\n</style>\r\n  \r\n{#if show}\r\n<div class=\"popup active\" id=\"popup-1\">\r\n    <div class=\"overlay\" on:click={onClose}></div>\r\n        <div class=\"content\">  \r\n        <h5 class=\"modal-title\">{message}</h5>\r\n        <hr>\r\n        <div>\r\n            <button class=\"btn btn-primary closeButton\" on:click={onClose}>დახურვა</button>\r\n        </div>\r\n    </div>\r\n</div>\r\n{/if}",
    "<script>\r\n    import {DeviceDetectorService} from \"../services/deviceDetector.service\";\r\n    import { navigate } from \"svelte-routing\";\r\n    import {HistoryService} from \"../services/history.service\";\r\n    import {ProductService} from \"../services/product.service\";\r\n    import { onMount } from 'svelte';\r\n    \r\n    export let showToolbar;\r\n\r\n    const DEFAULT_PAGINATION_LIMIT = 5;\r\n    const PAGES_BEFORE_AND_AFTER = 4;\r\n    \r\n    const historyService = HistoryService.getInstance();\r\n    const productService = ProductService.getInstance();\r\n\r\n\r\n    let filterName='', filterType='', filterStartDate=null, filterEndDate=null;\r\n    let columnNames = ['სახელი', 'ტიპი', 'თარიღი', 'რაოდენობა', 'გაყიდვის ფასი', 'ყიდვის ფასი', 'მოგება'];\r\n    let historyCount, numOfPages;\r\n    let marked;\r\n    let pages = [];\r\n\r\n    if(DeviceDetectorService.isBrowser) {\r\n        let url = new URL(window.location.href);\r\n        marked = parseInt(url.searchParams.get('page')) || 1;\r\n        filterName = url.searchParams.get('name') || '';\r\n        filterType = url.searchParams.get('type') || '';\r\n        filterStartDate = url.searchParams.get('start') || null;\r\n        filterEndDate = url.searchParams.get('end') || null;\r\n        showToolbar = filterType || filterName;\r\n    }\r\n\r\n    let allProducts = [], productsMap = {};\r\n    let histories = [], allHistories = [];\r\n    \r\n    onMount(async () => {\r\n        allProducts = await productService.getProducts();\r\n        allProducts.forEach(product => {\r\n            productsMap[product._id] = product;\r\n        });\r\n        let filters = {\r\n            productName: filterName,\r\n            productType: filterType,\r\n            sellDateFrom: filterStartDate,\r\n            sellDateTo: filterEndDate\r\n        }\r\n        historyCount = await historyService.getCount(filters);\r\n        numOfPages = Math.ceil(historyCount/DEFAULT_PAGINATION_LIMIT);\r\n        if(marked > numOfPages) marked = 1;\r\n        pages = new Array(numOfPages);\r\n    })\r\n\r\n    async function filterHistory() {\r\n        if(!DeviceDetectorService.isBrowser) return;\r\n        marked = 1;\r\n        let url = new URL(window.location.href);\r\n        url.searchParams.set('name', filterName || '');\r\n        url.searchParams.set('type', filterType || '');\r\n        url.searchParams.set('start', filterStartDate || '');\r\n        url.searchParams.set('end', filterEndDate || '');\r\n        navigate(url.toString());\r\n        let filters = {\r\n            productName: filterName,\r\n            productType: filterType,\r\n            sellDateFrom: filterStartDate,\r\n            sellDateTo: filterEndDate\r\n        }\r\n        historyCount = await historyService.getCount(filters);\r\n        numOfPages = Math.ceil(historyCount/DEFAULT_PAGINATION_LIMIT);\r\n        pages = new Array(numOfPages);\r\n        getFilteredData();\r\n    }\r\n\r\n    async function getFilteredData() {\r\n        if(!DeviceDetectorService.isBrowser) return;\r\n        let filters = {\r\n            productName: filterName,\r\n            productType: filterType,\r\n            sellDateFrom: filterStartDate,\r\n            sellDateTo: filterEndDate\r\n        }\r\n        allHistories = await historyService.findHistories(filters, marked, DEFAULT_PAGINATION_LIMIT, 1);\r\n        allHistories.forEach(h => {\r\n            h.sellDate = new Date(h.sellDate);\r\n        });\r\n        histories = allHistories;\r\n    }\r\n\r\n    function clearFilters() {\r\n        filterName='', filterType='', filterStartDate=null, filterEndDate=null;\r\n    }\r\n\r\n    function pageChanged(i) {\r\n        marked = i;\r\n    }\r\n\r\n    $: {\r\n        if(DeviceDetectorService.isBrowser) {\r\n            let url = new URL(window.location.href);\r\n            url.searchParams.set('page', marked);\r\n            navigate(url.toString());\r\n        }\r\n        getFilteredData();\r\n    }\r\n</script>\r\n\r\n<style>\r\n    td {\r\n        border: 1px solid #fefefe;\r\n        height: 50px;\r\n    }\r\n\r\n    th {\r\n        text-align: center;\r\n        height: 50px\r\n    }\r\n\r\n    .toolbar {\r\n        margin: 10px 0;\r\n        display: flex;\r\n        justify-content: flex-start;\r\n        align-items: center;\r\n    }\r\n\r\n    .toolbar-item {\r\n        margin: 0 10px;\r\n        font-style: italic;\r\n    }\r\n\r\n    .date-filters {\r\n        max-width: 250px;\r\n    }\r\n\r\n    .page-link {\r\n        background-color: #f3f3f3;\r\n        color: black;\r\n    }\r\n\r\n    .page-item.active .page-link {\r\n        z-index: 1;\r\n        color: #fff;\r\n        background-color: #3cb5cf;\r\n        border-color: transparent !important;\r\n    }\r\n</style>\r\n\r\n{#if showToolbar}\r\n<div class=\"toolbar\" id=\"toolbar\">\r\n    <div class=\"form-group toolbar-item toolbar\">\r\n        <span>სახელი:&emsp;</span>\r\n        <input type=\"text\" class=\"form-control\" bind:value={filterName}>\r\n    </div>\r\n\r\n    <div class=\"toolbar-item toolbar\">\r\n        <span>ტიპი:&emsp;</span>\r\n        <input type=\"text\" class=\"form-control\" bind:value={filterType}>\r\n    </div>\r\n\r\n    <div class=\"toolbar-item toolbar\">\r\n        <span>საწყისი&nbsp;თარიღი:&emsp;</span>\r\n        <input type=\"date\" class=\"form-control date-filters\" bind:value={filterStartDate}>\r\n    </div>\r\n\r\n    <div class=\"toolbar-item toolbar\">\r\n        <span>საბოლოო&nbsp;თარიღი:&emsp;</span>\r\n        <input type=\"date\" class=\"form-control date-filters\" bind:value={filterEndDate}>\r\n    </div>\r\n\r\n    <!-- svelte-ignore a11y-missing-attribute -->\r\n    <div>\r\n        <input type=\"image\" src=\"images/search.png\" width=\"27px\" height=\"27px\" style=\"margin: 0 8px;\"\r\n            on:click={filterHistory}>\r\n    </div>\r\n    \r\n    <!-- svelte-ignore a11y-missing-attribute -->\r\n    <div>\r\n        <input type=\"image\" src=\"images/clearFilters.ico\" width=\"27px\" height=\"27px\" style=\"margin: 0 8px;\"\r\n            on:click={clearFilters}>\r\n    </div>\r\n</div>\r\n{/if}\r\n\r\n<table class=\"table\">\r\n    <thead>\r\n    <tr>\r\n        {#each columnNames as column}\r\n            <th scope=\"col\" style=\"width: 14%;\">{column}</th>\r\n        {/each}\r\n    </tr>\r\n    </thead>\r\n    <tbody>\r\n        {#each histories as history, i}\r\n        <tr>\r\n            <td>{history.productName}</td>\r\n            <td>{history.productType}</td>\r\n            <td>{(history.sellDate.getMonth() + 1) + \"/\" + history.sellDate.getDate() + \"/\" +  history.sellDate.getFullYear()}</td>\r\n            <td>{Number.isInteger(history.amount) ? history.amount : history.amount.toFixed(3)}</td>\r\n            <td style=\"text-align: end;\">{history.sellingPrice.toFixed(2)} ₾</td>\r\n            <td style=\"text-align: end;\">{history.originalPrice.toFixed(2)} ₾</td>\r\n            <td style=\"text-align: end;\">{history.benefit.toFixed(2)} ₾</td>\r\n        </tr>\r\n        {/each}\r\n    </tbody>\r\n</table>\r\n\r\n<nav aria-label=\"...\">\r\n    <ul class=\"pagination justify-content-center\">\r\n        <li class=\"page-item\">\r\n            <button class=\"page-link\" on:click={()=>{marked=1;}}>\r\n                &lt;&lt;\r\n            </button>\r\n        </li>\r\n        <li class=\"page-item\">\r\n            <button class=\"page-link\" on:click={()=>{if(marked > 1) marked--;}}>\r\n                უკან\r\n            </button>\r\n        </li>\r\n        {#each pages as ignored, i}\r\n            {#if marked - 1 - PAGES_BEFORE_AND_AFTER < i && i < marked + PAGES_BEFORE_AND_AFTER}\r\n                <li class={\"page-item \" + (marked===i+1 ? \"active\" : \"\")}>\r\n                    <button class=\"page-link\" on:click={()=>{pageChanged(i+1)}}>\r\n                        {i+1}\r\n                    </button>\r\n                </li>\r\n            {/if}\r\n        {/each}\r\n        <li class=\"page-item\">\r\n            <button class=\"page-link\" on:click={()=>{if(marked < numOfPages) marked++;}}>\r\n                წინ\r\n            </button>\r\n        </li>\r\n        <li class=\"page-item\">\r\n            <button class=\"page-link\" on:click={()=>{marked=numOfPages;}}>\r\n                &gt;&gt;\r\n            </button>\r\n        </li>\r\n    </ul>\r\n</nav>\r\n",
    "<script>\r\n    import {HistoryService} from \"../services/history.service\";\r\n    import { onMount } from 'svelte';\r\nimport DetailedProducts from \"../components/DetailedProducts.svelte\";\r\n    \r\n    const historyService = HistoryService.getInstance();\r\n    const date = new Date();\r\n\r\n    let filterName='', filterType='', filterStartDate=new Date(date.getFullYear(), 0, 1), filterEndDate=null;\r\n    let productsSold = {}, yearlyBenefit = 0, monthlyBenefit = 0, dailyBenefit = 0;\r\n    let showDetailedProducts = false, detailedAmounts = {};\r\n\r\n    onMount(async () => {\r\n        addEventListener(\"keyup\", (event) => {\r\n            if (event.key === 'Enter') {\r\n                filterData();\r\n            }\r\n        });\r\n        filterData();\r\n    })\r\n\r\n    async function filterData() {\r\n        productsSold = {}, yearlyBenefit = 0, monthlyBenefit = 0, dailyBenefit = 0, detailedAmounts = {};\r\n        let filters = {\r\n            productName: filterName,\r\n            productType: filterType,\r\n            sellDateFrom: filterStartDate,\r\n            sellDateTo: filterEndDate\r\n        }\r\n        let allHistories = await historyService.findHistories(filters, 0, 0, 0);\r\n        allHistories.forEach(history => {\r\n            history.sellDate = new Date(history.sellDate);\r\n            if (!(history.productName in productsSold)) {\r\n                productsSold[history.productName] = {\r\n                    amount: 0,\r\n                    yearlyBenefit: 0,\r\n                    monthlyBenefit: 0,\r\n                    dailyBenefit: 0\r\n                };\r\n            }\r\n            productsSold[history.productName].amount += history.amount;\r\n            productsSold[history.productName].yearlyBenefit += history.benefit;\r\n            if (date.getFullYear() === history.sellDate.getFullYear() && date.getMonth() === history.sellDate.getMonth()) \r\n                productsSold[history.productName].monthlyBenefit += history.benefit;\r\n            if (new Date().toDateString() == history.sellDate.toDateString()) \r\n                productsSold[history.productName].dailyBenefit += history.benefit;\r\n        })\r\n        for (const [key, value] of Object.entries(productsSold)) {\r\n            yearlyBenefit += value.yearlyBenefit;\r\n            monthlyBenefit += value.monthlyBenefit;\r\n            dailyBenefit += value.dailyBenefit;\r\n            if (!(key in detailedAmounts)) detailedAmounts[key] = 0;\r\n            detailedAmounts[key] += value.amount;\r\n        }\r\n    }\r\n\r\n    function clearFilters() {\r\n        filterName='', filterType='', filterStartDate=null, filterEndDate=null;\r\n    }\r\n\r\n</script>\r\n\r\n<style>\r\n\r\n    .all-parts {\r\n        display: flex;\r\n        flex-direction: left;\r\n        justify-content: space-around;\r\n    }\r\n    \r\n    .toolbar {\r\n        display: flex;\r\n        flex-direction: column;\r\n        justify-content: space-between;\r\n        height: 500px;\r\n        margin-top: 70px;\r\n    }\r\n\r\n    .filter-header {\r\n        text-align: center;\r\n        font-weight: bold;\r\n        font-size: 19px;\r\n    }\r\n\r\n    .filter-pair {\r\n        display: flex;\r\n        flex-direction: column;\r\n        justify-content: space-between;\r\n        height: 90px;\r\n    }\r\n\r\n    .toolbar-item {\r\n        width: 400px;\r\n    }\r\n\r\n    .form-control {\r\n        height: 55px;\r\n        font-size: 20px;\r\n    }\r\n\r\n    .filter-buttons {\r\n        display: flex;\r\n        flex-direction: row;\r\n        justify-content: space-evenly;\r\n    }\r\n\r\n    .btn {\r\n        font-size: 17px;\r\n        height: 42px;\r\n    }\r\n\r\n    .btn-primary {\r\n        background-color: #3cb5cf;\r\n        border-color: #3cb5cf;\r\n    }\r\n\r\n    .divider-lines {\r\n        display: flex;\r\n        flex-direction: row;\r\n        width: 15px;\r\n        justify-content: space-around;\r\n    }\r\n\r\n    .vertical-line {\r\n        border-left: 4px solid white;\r\n        border-radius: 20px;\r\n        height: 620px;\r\n        margin-top: 30px;\r\n    }\r\n    \r\n    .results {\r\n        display: flex;\r\n        flex-direction: column;\r\n        justify-content: space-between;\r\n        height: 500px;   \r\n        margin-top: 50px;   \r\n    }\r\n\r\n    .result-pair {\r\n        display: flex;\r\n        flex-direction: column;\r\n        justify-content: space-between;\r\n        height: 70px;\r\n        text-align: center;\r\n    }\r\n    \r\n    .result-header {\r\n        font-size: 20px;\r\n        font-style: italic;\r\n        font-family: inherit;\r\n    }\r\n\r\n    .result-result {\r\n        font-size: 21px;\r\n        font-weight: bold;\r\n        font-family: inherit;\r\n    }\r\n\r\n    .result-count {\r\n        display: flex;\r\n        flex-direction: row;\r\n        justify-content: center;\r\n    }\r\n\r\n    .btn-details {\r\n        font-size: 14px;\r\n        height: 35px;\r\n        background-color:#006c84;\r\n        border-color:#006c84;\r\n    }\r\n\r\n    .result-winning {\r\n        color: #00c400;\r\n    }\r\n\r\n</style>\r\n\r\n<div class=\"all-parts\">\r\n    <div>\r\n        <div class=\"toolbar\">\r\n            <div class=\"toolbar-item\">\r\n                <div class=\"filter-pair\">\r\n                    <div class=\"filter-header\">სახელი:&emsp;</div>\r\n                    <input type=\"text\" class=\"form-control\" bind:value={filterName}>\r\n                </div>\r\n            </div>\r\n        \r\n            <div class=\"toolbar-item\">\r\n                <div class=\"filter-pair\">\r\n                    <div class=\"filter-header\">ტიპი:&emsp;</div>\r\n                    <input type=\"text\" class=\"form-control\" bind:value={filterType}>\r\n                </div>\r\n            </div>\r\n        \r\n            <div class=\"toolbar-item\">\r\n                <div class=\"filter-pair\">\r\n                    <div class=\"filter-header\">საწყისი&nbsp;თარიღი:&emsp;</div>\r\n                    <input type=\"date\" class=\"form-control date-filters\" bind:value={filterStartDate}>\r\n                </div>\r\n            </div>\r\n        \r\n            <div class=\"toolbar-item\">\r\n                <div class=\"filter-pair\">\r\n                    <div class=\"filter-header\">საბოლოო&nbsp;თარიღი:&emsp;</div>\r\n                    <input type=\"date\" class=\"form-control date-filters\" bind:value={filterEndDate}>\r\n                </div>\r\n            </div>\r\n        \r\n            <div class=\"filter-buttons\">\r\n                <!-- svelte-ignore a11y-missing-attribute -->\r\n                    <button type=\"button\" class=\"btn btn-primary\" on:click={filterData}>ძებნა</button>\r\n                \r\n                <!-- svelte-ignore a11y-missing-attribute -->\r\n                    <button type=\"button\" class=\"btn btn-primary\" on:click={clearFilters}>ფილტრის გასუფთავება</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    \r\n    \r\n    <div class=\"divider-lines\">\r\n        <div class=\"vertical-line\"></div>\r\n        <div class=\"vertical-line\"></div>\r\n    </div>\r\n\r\n    \r\n    <div class=\"results\">\r\n        <div class=\"result-pair\">\r\n            <div class=\"result-header\">\r\n                გაყიდული პროდუქტების რაოდენობა:\r\n            </div>\r\n            <div class=\"result-result result-count\">\r\n                <div>{Object.keys(productsSold).length}</div>\r\n                <div style=\"width:20px;\"></div>\r\n                <button type=\"button\" class=\"btn btn-primary btn-details\" on:click={() => {showDetailedProducts = true}}>დეტალურად ნახვა</button>\r\n            </div>\r\n        </div>\r\n        \r\n        <div class=\"result-pair\">\r\n            <div class=\"result-header\">\r\n                წლიური მოგება:\r\n            </div>\r\n            <div class=\"result-result result-winning\">\r\n                {yearlyBenefit.toFixed(2)} ₾\r\n            </div>\r\n        </div>\r\n        \r\n        <div class=\"result-pair\">\r\n            <div class=\"result-header\">\r\n                თვიური მოგება:\r\n            </div>\r\n            <div class=\"result-result result-winning\">\r\n                {monthlyBenefit.toFixed(2)} ₾\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"result-pair\">\r\n            <div class=\"result-header\">\r\n                დღიური მოგება:\r\n            </div>\r\n            <div class=\"result-result result-winning\">\r\n                {dailyBenefit.toFixed(2)} ₾\r\n            </div>\r\n        </div>\r\n        \r\n    </div>\r\n</div>\r\n\r\n\r\n<DetailedProducts\r\nbind:show={showDetailedProducts}\r\nbind:products={detailedAmounts}\r\n/>",
    "<script>\r\n    import { ParameterService } from \"../services/parameter.service\";\r\n    import ParameterModal from \"../components/ParameterModal.svelte\"\r\n    import DeleteModal from \"../components/DeleteModal.svelte\"\r\n    import { onMount } from 'svelte';\r\n    \r\n    export let showToolbar;\r\n\r\n    const ParameterType = {\r\n        INTEGER: \"რიცხვი\",\r\n        STRING: \"ტექსტი\",\r\n        LIST: \"სია\"\r\n    }\r\n    \r\n    let parameterService = ParameterService.getInstance();\r\n\r\n    let columnNames = ['სახელი', 'აღწერა', 'ტიპი', 'მნიშვნელობა'];\r\n    let filterName = '', filterDescription = '', filterType = '', filterValue = '';\r\n    let showParameterModal = false, isChange = false, parameterModalSubmited = false;\r\n    let _id, name = null, description = null, parameterType = ParameterType.INTEGER, value = null;\r\n    let indexOfSelectedParameter;\r\n    let toDeleteId = null, deleteModalShow = false, deleteModalSubmited = false, indexOfParameterToDelete = null;\r\n\r\n    let parameters = [], allParameters = [];\r\n    onMount(async () => {\r\n        allParameters = await parameterService.findParameters();\r\n        parameters = allParameters;\r\n    });\r\n\r\n    function onChange(parameter, i) {\r\n        _id = parameter._id\r\n        name = parameter.name;\r\n        description = parameter.description;\r\n        parameterType = parameter.parameterType;\r\n        value = parameter.value;\r\n        showParameterModal = true;\r\n        isChange = true;\r\n        indexOfSelectedParameter = i;\r\n    }\r\n    \r\n    function clearFilters() {\r\n        filterName = '';\r\n        filterDescription = '';\r\n        filterType = '';\r\n        filterValue = '';\r\n    }\r\n\r\n    function filterParameters() {\r\n        parameters = allParameters.filter(param => param.name.toLowerCase().includes(filterName.toLowerCase())\r\n                                            && param.description.toLowerCase().includes(filterDescription.toLowerCase())\r\n                                            && param.parameterType.toLowerCase().includes(filterType.toLowerCase())\r\n                                            && param.value.toLowerCase().includes(filterValue.toLowerCase()));\r\n    }\r\n\r\n    function onDelete(parameterId, index) {\r\n        toDeleteId = parameterId;\r\n        deleteModalShow = true;\r\n        indexOfParameterToDelete = index;\r\n    }\r\n\r\n    $: {\r\n        if (parameterModalSubmited) {\r\n            parameterModalIsSubmited();\r\n        }\r\n\r\n        if (deleteModalSubmited) {\r\n            deleteModalIsSubmited();\r\n        }\r\n    }\r\n\r\n    function parameterModalIsSubmited() {\r\n        let changedParameter = {\r\n                _id,\r\n                name,\r\n                description,\r\n                parameterType,\r\n                value\r\n            }\r\n            if (!isChange) {\r\n                parameters = [changedParameter, ...parameters];\r\n                allParameters = [changedParameter, ...allParameters];\r\n            } else {\r\n                parameters[indexOfSelectedParameter]._id = changedParameter._id;\r\n                parameters[indexOfSelectedParameter].name = changedParameter.name;\r\n                parameters[indexOfSelectedParameter].description = changedParameter.description;\r\n                parameters[indexOfSelectedParameter].parameterType = changedParameter.parameterType;\r\n                parameters[indexOfSelectedParameter].value = changedParameter.value;\r\n            }\r\n            name = null;\r\n            description = null;\r\n            parameterType = ParameterType.INTEGER;\r\n            value = null;\r\n            parameterModalSubmited = false;\r\n    }\r\n\r\n    function deleteModalIsSubmited() {\r\n        parameters = [...parameters.slice(0, indexOfParameterToDelete), ...parameters.slice(indexOfParameterToDelete + 1)];\r\n        allParameters = allParameters.filter(param => param._id != toDeleteId);\r\n        deleteModalSubmited = false;\r\n    }\r\n\r\n</script>\r\n\r\n<style>\r\n    td {\r\n        border: 1px solid #fefefe;\r\n    }\r\n\r\n    th {\r\n        text-align: center;\r\n    }\r\n\r\n    .actionButtonsDiv {\r\n        display: flex;\r\n        justify-content: flex-end;\r\n    }\r\n\r\n    .actionButtons {\r\n        margin: 0 5px;\r\n    }\r\n\r\n    .actionsTh {\r\n        width: 1%;\r\n        padding: 2px;\r\n        padding-right: 5px;\r\n        text-align: end;\r\n    }\r\n\r\n    .toolbar {\r\n        margin: 10px 0;\r\n        display: flex;\r\n        justify-content: flex-start;\r\n        align-items: center;\r\n    }\r\n\r\n    .toolbar-item {\r\n        margin: 0 10px;\r\n        font-style: italic;\r\n    }\r\n\r\n    .leftTooltipIconDiv {\r\n        width: 27px;\r\n        font-weight: normal;\r\n    }\r\n</style>\r\n\r\n{#if showToolbar}\r\n<div class=\"toolbar\" id=\"toolbar\">\r\n    <div class=\"form-group toolbar-item toolbar\">\r\n        <span>სახელი:&emsp;</span>\r\n        <input type=\"text\" class=\"form-control\" bind:value={filterName}>\r\n    </div>\r\n\r\n    <div class=\"form-group toolbar-item toolbar\">\r\n        <span>აღწერა:&emsp;</span>\r\n        <input type=\"text\" class=\"form-control\" bind:value={filterDescription}>\r\n    </div>\r\n\r\n    <div class=\"toolbar-item toolbar\">\r\n        <span>ტიპი:&emsp;</span>\r\n        <input type=\"text\" class=\"form-control\" bind:value={filterType}>\r\n    </div>\r\n\r\n    <div class=\"toolbar-item toolbar\">\r\n        <span>მნიშვნელობა:&emsp;</span>\r\n        <input type=\"text\" class=\"form-control\" bind:value={filterValue}>\r\n    </div>\r\n\r\n    <!-- svelte-ignore a11y-missing-attribute -->\r\n    <div>\r\n        <input type=\"image\" src=\"images/search.png\" width=\"27px\" height=\"27px\" style=\"margin: 0 8px;\"\r\n            on:click={filterParameters}>\r\n    </div>\r\n    \r\n    <!-- svelte-ignore a11y-missing-attribute -->\r\n    <div>\r\n        <input type=\"image\" src=\"images/clearFilters.ico\" width=\"27px\" height=\"27px\" style=\"margin: 0 8px;\"\r\n            on:click={clearFilters}>\r\n    </div>\r\n</div>\r\n{/if}\r\n\r\n<table class=\"table\">\r\n    <!-- header -->\r\n    <thead>\r\n    <tr>\r\n        {#each columnNames as column}\r\n            <th scope=\"col\" style=\"width: 16%;\">{column}</th>\r\n        {/each}\r\n        <th class=\"actionsTh\" scope=\"col\">\r\n        <div class=\"leftTooltipIconDiv\" style=\"margin-left: auto;\">\r\n                <!-- svelte-ignore a11y-missing-attribute -->\r\n                <input type=\"image\" src=\"images/add.jpg\" width=\"27px\" height=\"27px\" on:click={()=>{\r\n                    isChange = false;\r\n                    showParameterModal = true;\r\n                }}>\r\n            </div>\r\n        </th>\r\n    </tr>\r\n    </thead>\r\n\r\n    <!-- values -->\r\n    <tbody>\r\n        {#each parameters as parameter, i}\r\n        <tr>\r\n            <td>{parameter.name}</td>\r\n            <td>{parameter.description}</td>\r\n            <td>{parameter.parameterType}</td>\r\n            <td>{parameter.value}</td>\r\n            <td style=\"padding-right: 5px;\">\r\n                <div class=\"actionButtonsDiv\">\r\n                    <!-- change button -->\r\n                    <div class=\"leftTooltipIconDiv\" style=\"margin-right: 10px;\">\r\n                        <!-- svelte-ignore a11y-missing-attribute -->\r\n                        <input type=\"image\" src=\"images/edit.jpg\" class=\"actionButtons\" width=\"27px\" height=\"27px\"\r\n                            on:click={() => {\r\n                                onChange(parameter, i);\r\n                            }}>\r\n                    </div>\r\n\r\n                    <!-- delete button -->\r\n                    <div class=\"leftTooltipIconDiv\" style=\"margin-right: 5px;\">\r\n                        <!-- svelte-ignore a11y-missing-attribute -->\r\n                        <input type=\"image\" src=\"images/delete.png\" class=\"actionButtons\" width=\"27px\" height=\"27px\"\r\n                            on:click={async () => {\r\n                                onDelete(parameter._id, i)\r\n                            }}>\r\n                    </div>\r\n                </div>\r\n            </td>\r\n        </tr>\r\n        {/each}\r\n    </tbody>\r\n</table>\r\n\r\n\r\n<ParameterModal\r\nbind:show={showParameterModal}\r\nbind:isChange={isChange}\r\ntitle={isChange ? 'რედაქტირება' : 'დამატება'}\r\nbind:submited={parameterModalSubmited}\r\nbind:_id={_id}\r\nbind:name={name}\r\nbind:description={description} \r\nbind:parameterType={parameterType} \r\nbind:value={value}\r\n/>\r\n\r\n<DeleteModal\r\nbind:show={deleteModalShow}\r\nbind:submited={deleteModalSubmited}\r\nbind:toDeleteId={toDeleteId}\r\nbind:service={parameterService}\r\n/>",
    "<script>\r\n    import {DeviceDetectorService} from \"../services/deviceDetector.service\";\r\n    import ProductModal from \"../components/ProductModal.svelte\";\r\n    import SellModal from \"../components/SellModal.svelte\";\r\n    import DeleteModal from \"../components/DeleteModal.svelte\";\r\n    import {ProductService} from \"../services/product.service\";\r\n    import { ParameterService } from \"../services/parameter.service\";\r\n    import { onMount } from 'svelte';\r\n    import { navigate } from \"svelte-routing\";\r\n    import { ExcelGenerator } from \"../utils/ExcelGenerator\";\r\n    import { DateFormats } from \"../utils/DateFormats\"\r\n\r\n    export let showToolbar;\r\n\r\n    const ParameterType = {\r\n        INTEGER: \"რიცხვი\",\r\n        STRING: \"ტექსტი\",\r\n        LIST: \"სია\"\r\n    }\r\n\r\n    let ProductType = [\r\n        \"სხვა\"\r\n    ]\r\n\r\n    let QuanitityType = {\r\n        COUNT: \"რაოდენობითი\",\r\n        WEIGHT: \"წონითი\"\r\n    }\r\n    \r\n    let productService = ProductService.getInstance(), parameterService = ParameterService.getInstance();\r\n\r\n    let columnNames = ['კოდი', 'სახელი', 'ტიპი', 'გაყიდვის ფასი', 'ყიდვის ფასი', 'რაოდენობა', 'რაოდ. ტიპი', 'განახლების თარიღი', 'შექმნის თარიღი'];\r\n    let filterCode = '', filterName='', filterType='', filterStartPrice=null, filterEndPrice=null;\r\n    let showProductModal = false, isChange = false, showSellModal = false;\r\n    let _id, productCode = null, name = null, productType = ProductType[0], sellingPrice = null, \r\n            originalPrice = null, quantity = null, quantityType = QuanitityType.COUNT;\r\n    let productModalSubmited = false;\r\n    let indexOfSelectedProduct;\r\n    let amountToSell = null;\r\n    let sellModalSubmited = false;\r\n    let toDeleteId = null, deleteModalShow = false, deleteModalSubmited = false, indexOfProductToDelete = null;\r\n\r\n    if(DeviceDetectorService.isBrowser) {\r\n        let url = new URL(window.location.href);\r\n        filterCode = url.searchParams.get('code') || '';\r\n        filterName = url.searchParams.get('name') || '';\r\n        filterType = url.searchParams.get('type') || '';\r\n        filterStartPrice = parseInt(url.searchParams.get('start')) || null;\r\n        filterEndPrice = parseInt(url.searchParams.get('end')) || null;\r\n        showToolbar = filterCode || filterName || filterType || filterEndPrice || filterStartPrice;\r\n    }\r\n\r\n    let products = [], allProducts = [];\r\n    onMount(async () => {\r\n        allProducts = await productService.getProducts();\r\n        products = allProducts;\r\n\r\n        initializeParameters();\r\n        if(showToolbar) {\r\n            filterProducts();\r\n        }\r\n    });\r\n\r\n    async function initializeParameters() {\r\n        let res = await parameterService.getParameter(\"productTypes\", ParameterType.LIST, [\"სხვა\"]);\r\n        ProductType = ('' + res.value).split(\",\");\r\n    }\r\n\r\n    function onChange(product, i) {\r\n        _id = product._id\r\n        productCode = product.code;\r\n        name = product.name;\r\n        productType = product.productType;\r\n        sellingPrice = product.sellingPrice;\r\n        originalPrice = product.originalPrice;\r\n        quantity = product.quantity;\r\n        quantityType = product.quantityType;\r\n        showProductModal = true;\r\n        isChange = true;\r\n        indexOfSelectedProduct = i;\r\n    }\r\n    \r\n    function clearFilters() {\r\n        filterCode = '';\r\n        filterName='';\r\n        filterType='';\r\n        filterStartPrice=null;\r\n        filterEndPrice=null;\r\n    }\r\n\r\n    function filterProducts() {\r\n        products = allProducts.filter(prod => prod.code.toLowerCase().includes(filterCode.toLowerCase())\r\n                                            && prod.name.toLowerCase().includes(filterName.toLowerCase())\r\n                                            && prod.productType.toLowerCase().includes(filterType.toLowerCase()) \r\n                                            && (filterStartPrice == null || prod.sellingPrice >= filterStartPrice)\r\n                                            && (filterEndPrice == null || prod.sellingPrice <= filterEndPrice));\r\n        let url = new URL(window.location.href);\r\n        url.searchParams.set('code', filterCode || '');\r\n        url.searchParams.set('name', filterName || '');\r\n        url.searchParams.set('type', filterType || '');\r\n        url.searchParams.set('start', filterStartPrice || '');\r\n        url.searchParams.set('end', filterEndPrice || '');\r\n        navigate(url.toString());\r\n    }\r\n\r\n    function onSell(product, i) {\r\n        _id = product._id;\r\n        productCode = product.code;\r\n        name = product.name;\r\n        productType = product.productType;\r\n        quantity = product.quantity;\r\n        quantityType = product.quantityType;\r\n        sellingPrice = product.sellingPrice;\r\n        originalPrice = product.originalPrice;\r\n        indexOfSelectedProduct = i;\r\n        showSellModal = true;\r\n    }\r\n\r\n    function onDelete(productId, index) {\r\n        toDeleteId = productId;\r\n        deleteModalShow = true;\r\n        indexOfProductToDelete = index;\r\n    }\r\n\r\n    $: {\r\n        if (productModalSubmited) {\r\n            productModalIsSubmited();\r\n        }\r\n\r\n        if (sellModalSubmited) {\r\n            sellModalIsSubmited();\r\n        }\r\n\r\n        if (deleteModalSubmited) {\r\n            deleteModalIsSubmited();\r\n        }\r\n    }\r\n\r\n    function productModalIsSubmited() {\r\n        let changedProduct = {\r\n                _id,\r\n                code: productCode,\r\n                name,\r\n                productType: productType,\r\n                sellingPrice,\r\n                originalPrice,\r\n                quantity,\r\n                quantityType,\r\n                lastChangeDate: new Date()\r\n            }\r\n            if (!isChange) {\r\n                changedProduct['createDate'] = new Date();\r\n                products = [changedProduct, ...products];\r\n                allProducts = [changedProduct, ...allProducts];\r\n            } else {\r\n                products[indexOfSelectedProduct]._id = changedProduct._id;\r\n                products[indexOfSelectedProduct].code = changedProduct.code;\r\n                products[indexOfSelectedProduct].name = changedProduct.name;\r\n                products[indexOfSelectedProduct].productType = changedProduct.productType;\r\n                products[indexOfSelectedProduct].sellingPrice = changedProduct.sellingPrice;\r\n                products[indexOfSelectedProduct].originalPrice = changedProduct.originalPrice;\r\n                products[indexOfSelectedProduct].quantity = changedProduct.quantity;\r\n                products[indexOfSelectedProduct].quantityType = changedProduct.quantityType;\r\n                products[indexOfSelectedProduct].lastChangeDate = new Date();\r\n            }\r\n            productCode = null;\r\n            name = null;\r\n            productType = ProductType[0];\r\n            sellingPrice = null;\r\n            originalPrice = null;\r\n            quantity = null;\r\n            quantityType = QuanitityType.COUNT\r\n            productModalSubmited = false;\r\n    }\r\n\r\n    function sellModalIsSubmited() {\r\n        products[indexOfSelectedProduct].quantity = quantity;\r\n        name = null;\r\n        sellModalSubmited = false;\r\n    }\r\n\r\n    function deleteModalIsSubmited() {\r\n        products = [...products.slice(0, indexOfProductToDelete), ...products.slice(indexOfProductToDelete + 1)];\r\n        allProducts = allProducts.filter(prod => prod._id != toDeleteId);\r\n        deleteModalSubmited = false;\r\n    }\r\n\r\n    function getDateString(date) {\r\n        date = new Date(date);\r\n        return date.getFullYear() + '-' + (date.getMonth() + 1) + '-' + date.getDate() + ' ' + date.getHours() + \":\" + date.getMinutes() + \":\" + date.getSeconds();\r\n    }\r\n\r\n    function downloadExcel() {\r\n        let content = [[]];\r\n        allProducts.forEach(prod => {\r\n            let currRow = [];\r\n            currRow.push(prod.code)\r\n            currRow.push(prod.name)\r\n            currRow.push(prod.productType)\r\n            currRow.push(prod.sellingPrice)\r\n            currRow.push(prod.originalPrice)\r\n            currRow.push(prod.quantity)\r\n            currRow.push(prod.quantityType)\r\n            currRow.push(DateFormats.formatDateTime(prod.lastChangeDate))\r\n            currRow.push(DateFormats.formatDateTime(prod.createDate))\r\n            content.push(currRow);\r\n        })\r\n        ExcelGenerator.saveWithOneSheet(\"პროდუქტები\", \"პროდუქტები\", \"ბ.გ.\", \"პროდუქტები\", \"პროდუქტები\", columnNames, content)\r\n    }\r\n\r\n</script>\r\n\r\n<style>\r\n    td {\r\n        border: 1px solid #fefefe;\r\n    }\r\n\r\n    th {\r\n        text-align: center;\r\n    }\r\n\r\n    .actionButtonsDiv {\r\n        display: flex;\r\n        justify-content: flex-end;\r\n    }\r\n\r\n    .actionButtons {\r\n        margin: 0 5px;\r\n    }\r\n\r\n    .actionsTh {\r\n        width: 1%;\r\n        padding: 2px;\r\n        padding-right: 5px;\r\n        text-align: end;\r\n    }\r\n\r\n    .toolbar {\r\n        margin: 10px 0;\r\n        display: flex;\r\n        justify-content: flex-start;\r\n        align-items: center;\r\n    }\r\n\r\n    .toolbar-item {\r\n        margin: 0 10px;\r\n        font-style: italic;\r\n    }\r\n\r\n    .leftTooltipIconDiv {\r\n        width: 27px;\r\n        font-weight: normal;\r\n    }\r\n</style>\r\n\r\n{#if showToolbar}\r\n<div class=\"toolbar\" id=\"toolbar\">\r\n    <div class=\"form-group toolbar-item toolbar\">\r\n        <span>კოდი:&emsp;</span>\r\n        <input type=\"text\" class=\"form-control\" bind:value={filterCode}>\r\n    </div>\r\n    \r\n    <div class=\"form-group toolbar-item toolbar\">\r\n        <span>სახელი:&emsp;</span>\r\n        <input type=\"text\" class=\"form-control\" bind:value={filterName}>\r\n    </div>\r\n\r\n    <div class=\"toolbar-item toolbar\">\r\n        <span>ტიპი:&emsp;</span>\r\n        <input type=\"text\" class=\"form-control\" bind:value={filterType}>\r\n    </div>\r\n\r\n    <div class=\"toolbar-item toolbar\">\r\n        <span>საწყისი&nbsp;ფასი:&emsp;</span>\r\n        <input type=\"number\" class=\"form-control\" bind:value={filterStartPrice}>\r\n    </div>\r\n\r\n    <div class=\"toolbar-item toolbar\">\r\n        <span>საბოლოო&nbsp;ფასი:&emsp;</span>\r\n        <input type=\"number\" class=\"form-control\" bind:value={filterEndPrice}>\r\n    </div>\r\n\r\n    <!-- svelte-ignore a11y-missing-attribute -->\r\n    <div>\r\n        <input type=\"image\" src=\"images/search.png\" width=\"27px\" height=\"27px\" style=\"margin: 0 8px;\"\r\n            on:click={filterProducts}>\r\n    </div>\r\n    \r\n    <!-- svelte-ignore a11y-missing-attribute -->\r\n    <div>\r\n        <input type=\"image\" src=\"images/clearFilters.ico\" width=\"27px\" height=\"27px\" style=\"margin: 0 8px;\"\r\n            on:click={clearFilters}>\r\n    </div>\r\n</div>\r\n{/if}\r\n\r\n<table class=\"table\">\r\n    <thead>\r\n    <tr>\r\n        {#each columnNames as column}\r\n            <th scope=\"col\" style=\"width: 16%;\">{column}</th>\r\n        {/each}\r\n        <th class=\"actionsTh\" scope=\"col\">\r\n        <div>\r\n            <!-- svelte-ignore a11y-missing-attribute -->\r\n            <input type=\"image\" src=\"images/excel.png\" width=\"27px\" height=\"27px\" on:click={downloadExcel}>\r\n        </div>\r\n        <div class=\"leftTooltipIconDiv\" style=\"margin-left: auto;\">\r\n            <!-- svelte-ignore a11y-missing-attribute -->\r\n            <input type=\"image\" src=\"images/add.jpg\" width=\"27px\" height=\"27px\" on:click={()=>{\r\n                isChange = false;\r\n                showProductModal = true;\r\n            }}>\r\n        </div>\r\n        </th>\r\n    </tr>\r\n    </thead>\r\n    <tbody>\r\n        {#each products as product, i}\r\n        <tr>\r\n            <td>{product.code}</td>\r\n            <td>{product.name}</td>\r\n            <td>{product.productType}</td>\r\n            <td style=\"text-align: end;\">{product.sellingPrice.toFixed(2)} ₾</td>\r\n            <td style=\"text-align: end;\">{product.originalPrice.toFixed(2)} ₾</td>\r\n            <td>{(Number.isInteger(product.quantity) ? product.quantity : product.quantity.toFixed(product.quantityType == QuanitityType.WEIGHT ? 3 : 2)) +\r\n                 (product.quantityType == QuanitityType.WEIGHT ? \" კგ.\" : \" ც.\")}</td>\r\n            <td>{product.quantityType}</td>\r\n            <td>{getDateString(product.lastChangeDate)}</td>\r\n            <td>{getDateString(product.createDate)}</td>\r\n            <td style=\"padding-right: 5px;\">\r\n                <div class=\"actionButtonsDiv\">\r\n                    <div class=\"leftTooltipIconDiv\" data-tooltip=\"გაყიდვა\" data-tooltip-location=\"left\" style=\"margin-right: 10px;\">\r\n                        <!-- svelte-ignore a11y-missing-attribute -->\r\n                        <input type=\"image\" src=\"images/sell.png\" class=\"actionButtons\" width=\"27px\" height=\"27px\"\r\n                            on:click={() => {\r\n                                onSell(product, i);\r\n                            }}>\r\n                    </div>\r\n                    <div class=\"leftTooltipIconDiv\" data-tooltip=\"რედაქტირება\" data-tooltip-location=\"left\" style=\"margin-right: 10px;\">\r\n                        <!-- svelte-ignore a11y-missing-attribute -->\r\n                        <input type=\"image\" src=\"images/edit.jpg\" class=\"actionButtons\" width=\"27px\" height=\"27px\"\r\n                            on:click={() => {\r\n                                onChange(product, i);\r\n                            }}>\r\n                    </div>\r\n                    <div class=\"leftTooltipIconDiv\" data-tooltip=\"წაშლა\" data-tooltip-location=\"left\" style=\"margin-right: 5px;\">\r\n                        <!-- svelte-ignore a11y-missing-attribute -->\r\n                        <input type=\"image\" src=\"images/delete.png\" class=\"actionButtons\" width=\"27px\" height=\"27px\"\r\n                            on:click={async () => {\r\n                                onDelete(product._id, i)\r\n                            }}>\r\n                    </div>\r\n                </div>\r\n            </td>\r\n        </tr>\r\n        {/each}\r\n    </tbody>\r\n</table>\r\n\r\n<ProductModal bind:show={showProductModal}\r\n              bind:isChange={isChange}\r\n              title={isChange ? 'რედაქტირება' : 'დამატება'}\r\n              bind:_id={_id}\r\n              bind:productCode={productCode}\r\n              bind:name={name}\r\n              bind:productType={productType} \r\n              bind:sellingPrice={sellingPrice} \r\n              bind:originalPrice={originalPrice}\r\n              bind:quantity={quantity}\r\n              bind:quantityType={quantityType}\r\n              bind:submited={productModalSubmited}\r\n              />\r\n\r\n<SellModal\r\nbind:show={showSellModal}\r\nbind:_id={_id}\r\nbind:productCode={productCode}\r\nbind:productName={name}\r\nbind:productType={productType}\r\nbind:amount={amountToSell}\r\nbind:submited={sellModalSubmited}\r\nbind:quantity={quantity}\r\nsellingPrice={sellingPrice}\r\nbind:originalPrice={originalPrice}\r\nbind:quantityType={quantityType}\r\n/>\r\n\r\n<DeleteModal\r\nbind:show={deleteModalShow}\r\nbind:submited={deleteModalSubmited}\r\nbind:toDeleteId={toDeleteId}\r\nbind:service={productService}\r\n/>"
  ],
  "names": [],
  "mappings": "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"
}