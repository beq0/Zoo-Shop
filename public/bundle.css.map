{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "..\\ChooseProductModal.svelte",
    "..\\DeleteModal.svelte",
    "..\\DetailedProducts.svelte",
    "..\\Header.svelte",
    "..\\ParameterModal.svelte",
    "..\\ProductModal.svelte",
    "..\\SellModal.svelte",
    "..\\WarningModal.svelte",
    "..\\EditPasswordModal.svelte",
    "..\\HistoryReport.svelte",
    "..\\ProductReport.svelte",
    "..\\History.route.svelte",
    "..\\Home.route.svelte",
    "..\\Management.route.svelte",
    "..\\Parameter.route.svelte",
    "..\\Product.route.svelte",
    "..\\Sell.route.svelte"
  ],
  "sourcesContent": [
    "<script>\r\n    import { onMount } from \"svelte\";\r\n    import { AutoCompleteHelper } from \"../utils/AutoCompleteHelper\";\r\n\r\n    export let show;\r\n    export let products;\r\n    export let reverseProducts;\r\n    export let code;\r\n    export let added;\r\n    let suggested = false;\r\n    let name;\r\n    let names = [];\r\n    let codes = [];\r\n\r\n    function onClose() {\r\n        code = undefined;\r\n        name = undefined;\r\n        show = !show;\r\n    }\r\n\r\n    function onSubmit() {\r\n        if(!products.has(code)) return;\r\n        added = true;\r\n        show = !show;\r\n    }\r\n\r\n    onMount(() => {\r\n        codes = Array.from(products.keys());\r\n        names = Array.from(products.values());\r\n\r\n        setTimeout(() => {\r\n            AutoCompleteHelper.autocomplete(document.getElementById(\"_code\"), codes, (v) => {\r\n                suggested = true;\r\n                code = v;\r\n                name = products.get(v);\r\n            });\r\n            AutoCompleteHelper.autocomplete(document.getElementById(\"_name\"), names, (v) => {\r\n                suggested = true;\r\n                name = v;\r\n                code = reverseProducts.get(v);\r\n            });\r\n        }, 700);\r\n\r\n        window.addEventListener(\"keyup\", (event) => {\r\n            if (show && event.key === 'Enter') {\r\n                if(!suggested) {\r\n                    onSubmit();\r\n                }\r\n                suggested = false;\r\n            }\r\n            if (show && event.key === 'Escape') {\r\n                onClose();\r\n            }\r\n        })\r\n    });\r\n</script>\r\n\r\n<style>\r\n    \r\n    .form-group {\r\n        display: flex;\r\n        justify-content: flex-end;\r\n        align-items: center;\r\n    }\r\n  \r\n    .form-control {\r\n        width: 300px;\r\n    }\r\n\r\n    .label {\r\n        margin-right: 15px;\r\n    }\r\n  \r\n</style>\r\n\r\n<div class=\"popup active\" id=\"popup-1\">\r\n    <div class=\"overlay\" on:click={onClose}></div>\r\n        <div class=\"content\">  \r\n        <h5 class=\"modal-title\">აირჩიეთ პროდუქტი</h5>\r\n        <hr>\r\n        <div class=\"form-group\">\r\n            <div class=\"label\">კოდი:</div>\r\n            <div class=\"autocomplete\">\r\n                <input id=\"_code\" type=\"text\" autocomplete=\"off\" class=\"form-control\" bind:value={code}>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group autocomplete\">\r\n            <div class=\"label\">სახელი:</div>\r\n            <div class=\"autocomplete\">\r\n                <input id=\"_name\" type=\"text\" autocomplete=\"off\" class=\"form-control\" bind:value={name}>\r\n            </div>\r\n        </div>\r\n        <div>\r\n            <button class=\"btn btn-primary confirmButton\" on:click={onSubmit}>დასტური</button>\r\n            <button class=\"btn btn-primary closeButton\" on:click={onClose}>დახურვა</button>\r\n        </div>\r\n    </div>\r\n</div>",
    "<script>\r\n    import { onDestroy, onMount } from 'svelte';\r\nimport { ObjectHelper } from '../utils/ObjectHelper';\r\n    import WarningModal from './WarningModal.svelte'\r\n\r\n    export let show = false, toDeleteId, service, submited;\r\n\r\n    let password = null;\r\n    let showWarningModal = false, warningModalMessage = '';\r\n\r\n    onMount(() => {\r\n        window.addEventListener(\"keyup\", (event) => {\r\n            if (show && event.key === 'Enter') {\r\n                onSubmit();\r\n            }\r\n            if (show && event.key === 'Escape') {\r\n                onClose();\r\n            }\r\n        })\r\n    });\r\n\r\n    onDestroy(() => {\r\n        \r\n    });\r\n    \r\n    function onClose() {\r\n        toDeleteId = null;\r\n        show = false;\r\n        password = null;\r\n    }\r\n\r\n    async function onSubmit() {\r\n        if (ObjectHelper.isNullOrUndefined(password) || password.length < 8) {\r\n            return;\r\n        }\r\n        let res = await service.delete(toDeleteId, password);\r\n        if (res.status === 200) {\r\n            submited = true;\r\n            onClose();\r\n        } else {\r\n            warningModalMessage = 'დაფიქსირდა შეცდომა ობიექტის წაშლის დროს'\r\n            showWarningModal = true;\r\n        }\r\n    }\r\n\r\n</script>\r\n  \r\n<style> \r\n  \r\n  .form-group {\r\n        display: flex;\r\n        justify-content: flex-end;\r\n        align-items: center;\r\n    }\r\n\r\n    .label {\r\n        display: flex;\r\n        align-items: center;\r\n        margin-right: 15px;\r\n    }\r\n\r\n</style>\r\n  \r\n{#if show}\r\n<div class=\"popup active\" id=\"popup-1\">\r\n    <div class=\"overlay\" on:click={onClose}></div>\r\n        <div class=\"content\">  \r\n        <h5 class=\"modal-title\">დარწმუნებული ხართ, რომ გსურთ ობიექტის წაშლა?</h5>\r\n        <hr>\r\n\r\n        <div class=\"form-group\">\r\n            <div class=\"label\">პაროლი:&nbsp;<span class=\"required-field\" title=\"პაროლი უნდა იყოს&#013;მინიმუმ 8 სიგრძის\">*</span></div>\r\n            <input type=\"text\" autocomplete=\"off\" minlength=\"8\" required class=\"form-control password-text-field\" bind:value={password}>\r\n        </div>\r\n\r\n        <hr>\r\n        <div>\r\n            <button class=\"btn btn-primary confirmButton\" on:click={onSubmit}>დასტური</button>\r\n            <button class=\"btn btn-primary closeButton\" on:click={onClose}>დახურვა</button>\r\n        </div>\r\n    </div>\r\n</div>\r\n{/if}\r\n\r\n<WarningModal\r\nbind:show={showWarningModal}\r\nbind:message={warningModalMessage}\r\n/>",
    "<script>\r\n    import { onMount } from 'svelte';\r\n\r\n    export let show = false, products = {};\r\n\r\n    onMount(() => {\r\n        addEventListener(\"keyup\", (event) => {\r\n            if (show && event.key === 'Escape') {\r\n                onClose();\r\n            }\r\n        });\r\n    });\r\n    \r\n    function onClose() {\r\n        show = false;\r\n    }\r\n\r\n</script>\r\n  \r\n<style>\r\n  \r\n    .closeButton {\r\n        background: #3cb5cf !important;\r\n        border-color: #3cb5cf !important;\r\n    }\r\n\r\n    .amounts {\r\n        max-height: 400px;\r\n        overflow-y: auto;\r\n        font-size: 17px;\r\n    }\r\n    \r\n    .product-name {\r\n        font-weight: bold;\r\n    }\r\n\r\n</style>\r\n  \r\n{#if show}\r\n    <div class=\"popup active\" id=\"popup-1\">\r\n        <div class=\"overlay\" on:click={onClose}></div>\r\n            <div class=\"content\">  \r\n                <h5 class=\"modal-title\">დეტალური რაოდენობები:</h5>\r\n                <div class=\"amounts\">\r\n                    {#each Object.keys(products) as productName, i}\r\n                        <div><span class=\"product-name\">{productName}: </span>{products[productName]}</div>\r\n                    {/each}\r\n                </div>\r\n                <hr>\r\n                <div>\r\n                    <button class=\"btn btn-primary closeButton\" on:click={onClose}>დახურვა</button>\r\n                </div>\r\n        </div>\r\n    </div>\r\n{/if}",
    "<script>\r\n    import {link} from \"svelte-routing\";\r\n    import {DeviceDetectorService} from \"../services/deviceDetector.service\";\r\n\r\n    export let pathName = '/home';\r\n    export let show = {};\r\n  \r\n    $: {\r\n        if(DeviceDetectorService.isBrowser) {\r\n            pathName = window.location.pathname;\r\n        }\r\n    }\r\n\r\n    function focusWindow(event) {\r\n        event.path[0].blur();\r\n    }\r\n    \r\n</script>\r\n\r\n<style>\r\n    #mainHeader {\r\n        width: 100%;\r\n        background-color: #42ceeb;\r\n    }\r\n\r\n    #pills-tab {\r\n        margin: 0px !important;\r\n    }\r\n\r\n    .nav-link {\r\n        background-color: #42ceeb;\r\n        color: white;\r\n    }\r\n    \r\n    .active {\r\n        background-color: #3cb5cf !important;\r\n    }\r\n\r\n    .nav {\r\n        display: flex;\r\n        align-items: center;\r\n    }\r\n\r\n    .lastItem {\r\n        margin-right: auto;\r\n    }\r\n \r\n    .filterImage {\r\n        margin-right: 5px;\r\n    }\r\n</style>\r\n\r\n<div id=\"mainHeader\">\r\n    <ul class=\"nav nav-pills mb-3\" id=\"pills-tab\" role=\"tablist\">\r\n\r\n    <li class=\"nav-item\">\r\n        <a class=\"{'nav-link ' + (pathName === '/home' ? 'active' : '')}\" id=\"pills-home-tab\" data-toggle=\"pill\" href=\"home\" role=\"tab\" aria-controls=\"home\" use:link\r\n        on:click={() => pathName='/home'} on:focus={focusWindow}>მთავარი</a>\r\n    </li>\r\n\r\n    <li class=\"nav-item\">\r\n        <a class=\"{'nav-link ' + (pathName === '/products' ? 'active' : '')}\" id=\"pills-profile-tab\" data-toggle=\"pill\" href=\"products\" role=\"tab\" aria-controls=\"products\" use:link\r\n        on:click={() => pathName='/products'} on:focus={focusWindow}>პროდუქცია</a>\r\n    </li>\r\n\r\n    <li class=\"nav-item\">\r\n        <a class=\"{'nav-link ' + (pathName === '/history' ? 'active' : '')}\" id=\"pills-contact-tab\" data-toggle=\"pill\" href=\"history\" role=\"tab\" aria-controls=\"histroy\" use:link\r\n        on:click={() => pathName='/history'} on:focus={focusWindow}>ისტორია</a>\r\n    </li>\r\n\r\n    <li class=\"nav-item\">\r\n        <a class=\"{'nav-link ' + (pathName === '/parameter' ? 'active' : '')}\" id=\"pills-contact-tab\" data-toggle=\"pill\" href=\"parameter\" role=\"tab\" aria-controls=\"parameter\" use:link\r\n        on:click={() => pathName='/parameter'} on:focus={focusWindow}>პარამეტრები</a>\r\n    </li>\r\n\r\n    <li class=\"nav-item\">\r\n        <a class=\"{'nav-link ' + (pathName === '/scanner' ? 'active' : '')}\" id=\"pills-contact-tab\" data-toggle=\"pill\" href=\"scanner\" role=\"tab\" aria-controls=\"scanner\" use:link\r\n        on:click={() => pathName='/scanner'} on:focus={focusWindow}>გაყიდვა</a>\r\n    </li>\r\n\r\n    <li class=\"nav-item lastItem\">\r\n        <a class=\"{'nav-link ' + (pathName === '/management' ? 'active' : '')}\" id=\"pills-contact-tab\" data-toggle=\"pill\" href=\"management\" role=\"tab\" aria-controls=\"management\" use:link\r\n        on:click={() => pathName='/management'} on:focus={focusWindow}>მენეჯმენტი</a>\r\n    </li>\r\n\r\n    {#if pathName === '/products' || pathName === '/history' || pathName === '/management'}\r\n    <li>\r\n        <div title=\"ფილტრაცია\">\r\n            <!-- svelte-ignore a11y-missing-attribute -->\r\n            <input class=\"filterImage\" type=\"image\" \r\n            src=\"images/showFilter.png\" width=\"27px\" height=\"27px\" on:click={()=>show.showToolbar=!show.showToolbar}>\r\n        </div>\r\n    </li>\r\n    {/if}\r\n\r\n    {#if pathName === '/products' || pathName === '/history'}\r\n    <li>\r\n        <div title=\"რეპორტის გენერაცია\">\r\n            <!-- svelte-ignore a11y-missing-attribute -->\r\n            <input class=\"filterImage\" type=\"image\" \r\n            src=\"images/excel.png\" width=\"27px\" height=\"27px\" on:click={()=> {\r\n                if (pathName === '/products') show.showProductReport = true;\r\n                if (pathName === '/history') show.showHistoryReport = true;\r\n            }}>\r\n        </div>\r\n    </li>\r\n    {/if}\r\n\r\n    </ul>\r\n</div>",
    "<script>\r\n    import { ParameterService } from \"../services/parameter.service\";\r\n    import { onMount } from 'svelte';\r\n    import WarningModal from './WarningModal.svelte'\r\n    import { ObjectHelper } from '../utils/ObjectHelper';\r\n  \r\n    const ParameterType = {\r\n        INTEGER: \"რიცხვი\",\r\n        STRING: \"ტექსტი\",\r\n        LIST: \"სია\"\r\n    }\r\n  \r\n    export let show, title = 'დამატება', submited = false, isChange;\r\n    export let _id, name = null, description = null, parameterType = ParameterType.INTEGER, value = null, password = null;\r\n  \r\n    let showWarningModal = false, warningModalMessage = '';\r\n    \r\n    onMount(() => {\r\n        addEventListener(\"keyup\", (event) => {\r\n            if (show && event.key === 'Enter') {\r\n                onSubmit();\r\n            }\r\n            if (show && event.key === 'Escape') {\r\n                onClose();\r\n            }\r\n        });\r\n    });\r\n    \r\n    const parameterService = ParameterService.getInstance();\r\n  \r\n    async function onSubmit() {\r\n        let updatedParameter = {\r\n            _id,\r\n            name,\r\n            description,\r\n            parameterType,\r\n            value\r\n        }\r\n\r\n        if (name && parameterType) {\r\n            let res = null;\r\n            if (!isChange) res = await parameterService.addParameter(updatedParameter);\r\n            else {\r\n                if (ObjectHelper.isNullOrUndefined(password) || password.length < 8) {\r\n                    return;\r\n                }\r\n                updatedParameter['password'] = password;\r\n                res = await parameterService.changeParameter(updatedParameter);\r\n            }\r\n\r\n            if (res.status === 200) {\r\n                show = false;\r\n                submited = true;\r\n                _id = res._id;\r\n            } else {\r\n                warningModalMessage = 'დაფიქსირდა შეცდომა პარამეტრის ' + (isChange ? 'რედაქტირების' : 'დამატების') + ' დროს!';\r\n                showWarningModal = true;\r\n            }\r\n        }\r\n    }\r\n  \r\n    function onClose() {\r\n        _id = null;\r\n        name = null;\r\n        description = null;\r\n        parameterType = ParameterType.INTEGER;\r\n        value = null;\r\n        show = false;\r\n    }\r\n    \r\n</script>\r\n  \r\n<style>\r\n    \r\n    .form-group {\r\n        display: flex;\r\n        justify-content: flex-end;\r\n        align-items: center;\r\n    }\r\n  \r\n    .form-control {\r\n        width: 300px;\r\n    }\r\n  \r\n</style>\r\n  \r\n{#if show}\r\n<div class=\"popup active\" id=\"popup-1\">\r\n    <div class=\"overlay\" on:click={onClose}></div>\r\n        <div class=\"content\">  \r\n            <h5 class=\"modal-title\">პარამეტრის {title}</h5>\r\n            <hr>\r\n            <div class=\"form-group\">\r\n                <div>სახელი:&emsp;</div>\r\n                <input type=\"text\" class=\"form-control\" bind:value={name}>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <div>აღწერა:&emsp;</div>\r\n                <input type=\"text\" class=\"form-control\" bind:value={description}>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <div>ტიპი:&emsp;</div>\r\n                <select class=\"form-control\" bind:value={parameterType}>\r\n                    {#each Object.values(ParameterType) as parameterType}\r\n                        <option>{parameterType}</option>\r\n                    {/each}\r\n                </select>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <div>მნიშვნელობა:&emsp;</div>\r\n                <input type=\"text\" class=\"form-control\" bind:value={value}>\r\n            </div>\r\n\r\n            {#if isChange}\r\n                <div class=\"form-group\">\r\n                    <div class=\"label\">პაროლი:&nbsp;<span class=\"required-field\" title=\"პაროლი უნდა იყოს&#013;მინიმუმ 8 სიგრძის\">*</span></div>\r\n                    <input type=\"text\" autocomplete=\"off\" minlength=\"8\" required class=\"form-control password-text-field\" bind:value={password}>\r\n                </div>  \r\n            {/if}\r\n                  \r\n            <hr>\r\n            <div>\r\n                <button class=\"btn btn-primary confirmButton\" on:click={onSubmit}>დასტური</button>\r\n                <button class=\"btn btn-primary closeButton\" on:click={onClose}>დახურვა</button>\r\n            </div>\r\n    </div>\r\n</div>\r\n{/if}\r\n\r\n\r\n<WarningModal\r\nbind:show={showWarningModal}\r\nbind:message={warningModalMessage}\r\n/>",
    "<script>\r\n  import {ProductService} from \"../services/product.service\";\r\n  import { ParameterService } from \"../services/parameter.service\";\r\n  import { onMount } from 'svelte';\r\n  import WarningModal from './WarningModal.svelte'\r\n  import { ObjectHelper } from '../utils/ObjectHelper';\r\n\r\n  const ParameterType = {\r\n    INTEGER: \"რიცხვი\",\r\n    STRING: \"ტექსტი\",\r\n    LIST: \"სია\"\r\n  }\r\n\r\n  let ProductType = [\r\n    \"სხვა\"\r\n  ]\r\n\r\n  const QuanitityType = {\r\n    COUNT: \"ცალობითი\",\r\n    WEIGHT: \"წონითი\"\r\n  }\r\n\r\n  export let show;\r\n  export let title = 'დამატება';\r\n  export let _id, productCode = null, name = \"\", productType = ProductType[0], \r\n          sellingPrice = null, originalPrice = null, quantity = null, quantityType = QuanitityType.COUNT, \r\n          official = true, password = null;\r\n  export let submited = false, editedQuantities = [];\r\n  export let isChange;\r\n\r\n  const productService = ProductService.getInstance();\r\n  const parameterService = ParameterService.getInstance();\r\n\r\n  let showWarningModal = false, warningModalMessage = '';\r\n  \r\n  onMount(() => {\r\n    addEventListener(\"keyup\", (event) => {\r\n      if (show && event.key === 'Enter') {\r\n        onSubmit();\r\n      }\r\n      if (show && event.key === 'Escape') {\r\n        onClose();\r\n      }\r\n    });\r\n    initializeParameters()\r\n  });\r\n\r\n  async function initializeParameters() {\r\n    let res = await parameterService.getParameter(\"productTypes\", ParameterType.LIST, [\"სხვა\"]);\r\n    ProductType = ('' + res.value).split(\",\");\r\n  }\r\n  \r\n  async function onSubmit() {\r\n    const filteredEditedQuantities = editedQuantities.filter(q => q.quantity !== null && q.originalPrice !== null);\r\n    let updatedProduct = {\r\n      _id,\r\n      code: productCode,\r\n      name,\r\n      productType,\r\n      sellingPrice,\r\n      originalPrice,\r\n      quantity: filteredEditedQuantities,\r\n      quantityType,\r\n      official\r\n    }\r\n    if (name && productType && sellingPrice != null) {\r\n      let res = null\r\n      if (!isChange) res = await productService.addProduct(updatedProduct);\r\n      else {\r\n        if (ObjectHelper.isNullOrUndefined(password) || password.length < 8) {\r\n          return;\r\n        }\r\n        updatedProduct['password'] = password;\r\n        res = await productService.changeProduct(updatedProduct);\r\n      }\r\n      if (res.status === 200) {\r\n        show=false;\r\n        submited = true;\r\n        _id = res._id;\r\n      } else {\r\n        warningModalMessage = 'დაფიქსირდა შეცდომა პროდუქტის ' + (isChange ? 'რედაქტირების' : 'დამატების') + ' დროს!';\r\n        showWarningModal = true;\r\n      }\r\n    }\r\n  }\r\n\r\n  function onClose() {\r\n    editedQuantities = []\r\n    show = false;\r\n    _id = null\r\n    productCode = null\r\n    name = null;\r\n    productType = ProductType[0];\r\n    sellingPrice = null;\r\n    originalPrice = null;\r\n    quantity = null;\r\n    quantityType = QuanitityType.COUNT; \r\n    official = true;\r\n    password = null;\r\n  }\r\n\r\n</script>\r\n\r\n<style>\r\n  \r\n  .form-group {\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    align-items: center;\r\n  }\r\n\r\n  .label {\r\n    margin-right: 15px;\r\n  }\r\n\r\n  #quantity-label {\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    height: 50px;\r\n  }\r\n\r\n  .form-control {\r\n    width: 300px;\r\n  }\r\n\r\n  #official {\r\n    height: 17px;\r\n    box-shadow: none;\r\n  }\r\n\r\n  .quantities {\r\n    display: flex;\r\n    flex-direction: column;\r\n  }\r\n\r\n  .quantities-info {\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n  }\r\n\r\n  .quantity-info-width {\r\n    width: 150px;\r\n  }\r\n\r\n  #quantity-pairs {\r\n    max-height: 115px; \r\n    margin-top: 10px;\r\n  }\r\n\r\n</style>\r\n\r\n{#if show}\r\n<div class=\"popup active\" id=\"popup-1\">\r\n  <div class=\"overlay\" on:click={onClose}></div>\r\n    <div class=\"content\">  \r\n    <h5 class=\"modal-title\">პროდუქტის {title}</h5>\r\n    <hr>\r\n    <div class=\"form-group\">\r\n      <div class=\"label\">კოდი: <span class=\"required-field\" title=\"სავალდებულო ველი\">*</span></div>\r\n      <input type=\"text\" class=\"form-control\" bind:value={productCode} required>\r\n    </div>\r\n    \r\n    <div class=\"form-group\">\r\n      <div class=\"label\">სახელი: <span class=\"required-field\" title=\"სავალდებულო ველი\">*</span></div>\r\n      <input type=\"text\" class=\"form-control\" bind:value={name} required>\r\n    </div>\r\n    \r\n    <div class=\"form-group\">\r\n      <div class=\"label\">ტიპი:</div>\r\n      <select class=\"form-control\" bind:value={productType} required>\r\n        {#each Object.values(ProductType) as productType}\r\n        <option>{productType}</option>\r\n        {/each}\r\n      </select>\r\n    </div>\r\n    \r\n    <div class=\"form-group\">\r\n      <div class=\"label\">გაყიდვის&nbsp;ფასი:</div>\r\n      <input type=\"number\" class=\"form-control\" bind:value={sellingPrice}>\r\n    </div>\r\n    \r\n    <div class=\"form-group\">\r\n      <div class=\"label\">ასაღები&nbsp;ფასი:</div>\r\n      <input type=\"number\" class=\"form-control\" bind:value={originalPrice} readonly>\r\n    </div>\r\n    \r\n    <div class=\"form-group\">\r\n      <div id=\"quantity-label\" class=\"label\">\r\n        <div>რაოდენობები: <span class=\"required-field\" title=\"სავალდებულო ველი\">*</span></div>\r\n        <!-- svelte-ignore a11y-missing-attribute -->\r\n        <input type=\"image\" src=\"images/add.jpg\" width=\"23px\" height=\"23px\" on:click={() => {\r\n          editedQuantities.push({\r\n            quantity: null,\r\n            originalPrice: null,\r\n            createDate: new Date()\r\n          });\r\n          editedQuantities = editedQuantities;\r\n        }}>\r\n      </div>\r\n      <div class=\"quantities\">\r\n        <div class=\"quantities-info\">\r\n          <div class=\"quantity-info-width\">რაოდენობა</div>\r\n          <div class=\"quantity-info-width\">ასაღები ფასი</div>\r\n        </div>\r\n        <div id=\"quantity-pairs\" style=\"{editedQuantities.length <= 3 ? \"\" : \"overflow-y: scroll;\"}\">\r\n          {#each editedQuantities as qt, i}\r\n          <div class=\"quantities-info\">\r\n            <input type=\"number\" class=\"form-control\" style=\"width: {editedQuantities.length <= 3 ? \"150\" : \"140\"}px;\" bind:value={qt.quantity}>\r\n            <input type=\"number\" class=\"form-control\" style=\"width: {editedQuantities.length <= 3 ? \"150\" : \"140\"}px;\" bind:value={qt.originalPrice}>\r\n            <!-- svelte-ignore a11y-missing-attribute -->\r\n            <input type=\"image\" src=\"images/delete.png\" style=\"margin-left: 5px;\" width=\"23px\" height=\"23px\" on:click={() => {\r\n              editedQuantities.splice(i, 1);\r\n              editedQuantities = editedQuantities;\r\n            }}> \r\n          </div>\r\n          {/each}\r\n        </div>\r\n      </div>\r\n    </div>\r\n    \r\n    <div class=\"form-group\">\r\n      <div class=\"label\">რაოდ. ტიპი: <span class=\"required-field\" title=\"სავალდებულო ველი\">*</span></div>\r\n      <select class=\"form-control\" bind:value={quantityType} required>\r\n        {#each Object.values(QuanitityType) as quantityType}\r\n        <option>{quantityType}</option>\r\n        {/each}\r\n      </select>\r\n    </div>\r\n    \r\n    <div class=\"form-group\">\r\n      <div class=\"label\">ოფიციალური:</div>\r\n      <input type=\"checkbox\" class=\"form-control\" id=\"official\" bind:checked={official} required>\r\n    </div>\r\n\r\n    {#if isChange}\r\n      <div class=\"form-group\">\r\n        <div class=\"label\">პაროლი:&nbsp;<span class=\"required-field\" title=\"პაროლი უნდა იყოს&#013;მინიმუმ 8 სიგრძის\">*</span></div>\r\n        <input type=\"text\" autocomplete=\"off\" minlength=\"8\" required class=\"form-control password-text-field\" bind:value={password}>\r\n      </div>  \r\n    {/if}\r\n\r\n    <hr>\r\n    <div>\r\n      <button class=\"btn btn-primary confirmButton\" on:click={onSubmit}>დასტური</button>\r\n      <button class=\"btn btn-primary closeButton\" on:click={onClose}>დახურვა</button>\r\n    </div>\r\n  </div>\r\n</div>\r\n{/if}\r\n\r\n\r\n<WarningModal\r\nbind:show={showWarningModal}\r\nbind:message={warningModalMessage}\r\n/>",
    "<script>\r\n    import {ProductService} from \"../services/product.service\";\r\n    import { onMount } from 'svelte';\r\n    import WarningModal from './WarningModal.svelte';\r\n\r\n    const QuanitityType = {\r\n      COUNT: \"ცალობითი\",\r\n      WEIGHT: \"წონითი\"\r\n    }\r\n\r\n    export let show = false, _id, productName = '', amount = null, quantity = null,\r\n    quantityType = QuantityType.COUNT, submited = false, originalPrice = null, sellingPrice = null, availableAmount = null;\r\n\r\n    let amountChanged = false, fullPriceChanged = false, sellingPriceChanged = false;\r\n    let fullPrice = null;\r\n    let showWarningModal = false, warningModalMessage = '';\r\n    const date = new Date();\r\n    let sellDate = date.getFullYear() + \"-\" + (date.getMonth() + 1) + \"-\" + date.getDate();\r\n\r\n    const productService = ProductService.getInstance();\r\n\r\n    onMount(() => {\r\n      addEventListener(\"keyup\", (event) => {\r\n        if (show && event.key === 'Enter') {\r\n          onSubmit();\r\n        }\r\n        if (show && event.key === 'Escape') {\r\n          onClose();\r\n        }\r\n      });\r\n    });\r\n\r\n    function isCountType() {\r\n      return quantityType == QuanitityType.COUNT;\r\n    }\r\n\r\n    function isInt(n) {\r\n      return n % 1 === 0;\r\n    }\r\n\r\n    function getDecimalPoints(n) {\r\n      if (n == null) return 0;\r\n      let stringNumber = n.toString();\r\n      if (!stringNumber.includes('.')) return 0;\r\n      return stringNumber.length - (stringNumber.indexOf('.') + 1);\r\n    }\r\n    \r\n    function onClose() {\r\n        _id = null;\r\n        productName = null;\r\n        amount = null;\r\n        fullPrice = null;\r\n        availableAmount = null;\r\n        show = false;\r\n    }\r\n\r\n    async function onSubmit() {\r\n        if(!amount) return;\r\n        let res = await productService.sellProduct(_id, amount, sellingPrice, sellDate);\r\n        if (res.status === 200) {\r\n          availableAmount = null;\r\n          show=false;\r\n          submited = true;\r\n          _id = res._id;\r\n          quantity = res.newQuantity;\r\n          originalPrice = res.newOriginalPrice;\r\n          amount = null;\r\n          fullPrice = null;\r\n        } else {\r\n          warningModalMessage = 'დაფიქსირდა შეცდომა პროდუქტისთვის რაოდენობის დაკლების დროს!'\r\n          showWarningModal = true;\r\n          return;\r\n        }\r\n    }\r\n\r\n    $: {\r\n      \r\n      if (amountChanged) {\r\n        fixAmount();\r\n        fullPrice = getFullPrice();\r\n        amountChanged = false;\r\n      }\r\n\r\n      if (fullPriceChanged) {\r\n        if (fullPrice < 0) fullPrice = 0;\r\n        amount = getAmount();\r\n        fullPriceChanged = false;\r\n        fixAmount();\r\n        if ((availableAmount || availableAmount == 0) && availableAmount - amount <= 0) {\r\n          fullPrice = getFullPrice();\r\n        }\r\n      }\r\n\r\n      if (sellingPriceChanged) {\r\n        fullPrice = getFullPrice();\r\n        sellingPriceChanged = false;\r\n      }\r\n      \r\n    }\r\n\r\n    function fixAmount() {\r\n      // if the amount is less than 0 or more than the available amount, fix it\r\n      if (amount < 0) {\r\n        amount = 0;\r\n      } else if ((availableAmount || availableAmount == 0) && availableAmount - amount <= 0) {\r\n        amount = availableAmount;\r\n      }\r\n\r\n      // if the amount is not the integer and the product's quantity type is COUNT, floor the amount\r\n      if (isCountType() && !isInt(amount)) {\r\n        amount = Math.floor(amount);\r\n      }\r\n      \r\n      // if the amount's decimal points are more than 3, fix it to 3\r\n      if (!isCountType() && getDecimalPoints(amount) > 3) {\r\n        amount = amount.toFixed(3);\r\n      }\r\n    }\r\n\r\n    function getFullPrice() {\r\n      return (amount * sellingPrice).toFixed(2);\r\n    }\r\n\r\n    function getAmount() {\r\n      let result = fullPrice / sellingPrice;\r\n      if (isCountType()) result = Math.floor(result);\r\n      else result = result.toFixed(3);\r\n      return result;\r\n    }\r\n\r\n  </script>\r\n  \r\n  <style>\r\n    \r\n    .form-group {\r\n      display: flex;\r\n      justify-content: flex-end;\r\n      align-items: center;\r\n    }\r\n  \r\n    .form-control {\r\n      width: 300px;\r\n    }\r\n  \r\n  </style>\r\n  \r\n  {#if show}\r\n  <div class=\"popup active\" id=\"popup-1\">\r\n    <div class=\"overlay\" on:click={onClose}></div>\r\n        <div class=\"content\">  \r\n        <h5 class=\"modal-title\">პროდუქტ {productName}(ი)ს გაყიდვა</h5>\r\n        <hr>\r\n        <div class=\"form-group\">\r\n          <div>რაოდენობა:&emsp;</div>\r\n          <input type=\"number\" class=\"form-control\" id=\"amount\" bind:value={amount} on:input={() => {amountChanged = true}} placeholder={isCountType() ? 'ცალობითი რაოდენობა' : 'წონითი რაოდენობა'}>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <div>ჯამური ფასი:&emsp;</div>\r\n          <input type=\"number\" class=\"form-control\" id=\"amount\" bind:value={fullPrice} on:input={() => {fullPriceChanged = true}}>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <div>ფასი:&emsp;</div>\r\n          <input type=\"number\" class=\"form-control\" id=\"amount\" bind:value={sellingPrice} on:input={() => {sellingPriceChanged = true}}>\r\n        </div>\r\n        \r\n        <div class=\"form-group\">\r\n          <div>თარიღი:&emsp;</div>\r\n          <input type=\"date\" class=\"form-control\" id=\"amount\" bind:value={sellDate}>\r\n        </div>\r\n        <hr>\r\n        <div>\r\n            <button class=\"btn btn-primary confirmButton\" on:click={onSubmit}>დასტური</button>\r\n            <button class=\"btn btn-primary closeButton\" on:click={onClose}>დახურვა</button>\r\n        </div>\r\n    </div>\r\n  </div>\r\n  {/if}\r\n\r\n\r\n<WarningModal\r\nbind:show={showWarningModal}\r\nbind:message={warningModalMessage}\r\n/>",
    "<script>\r\n    import { onMount } from 'svelte';\r\n\r\n    export let show = false, message;\r\n\r\n    onMount(() => {\r\n        addEventListener(\"keyup\", (event) => {\r\n            if (show && event.key === 'Escape') {\r\n                onClose();\r\n            }\r\n        });\r\n    });\r\n    \r\n    function onClose() {\r\n        message = '';\r\n        show = false;\r\n    }\r\n\r\n</script>\r\n  \r\n<style>\r\n\r\n    .closeButton {\r\n        background: #3cb5cf !important;\r\n        border-color: #3cb5cf !important;\r\n    }\r\n    \r\n    .content {\r\n        color: red;\r\n    }\r\n  \r\n</style>\r\n  \r\n{#if show}\r\n<div class=\"popup active\" id=\"popup-1\">\r\n    <div class=\"overlay\" on:click={onClose}></div>\r\n        <div class=\"content\">  \r\n        <h5 class=\"modal-title\">{message}</h5>\r\n        <hr>\r\n        <div>\r\n            <button class=\"btn btn-primary closeButton\" on:click={onClose}>დახურვა</button>\r\n        </div>\r\n    </div>\r\n</div>\r\n{/if}",
    "<script>\r\n    import { onMount } from 'svelte';\r\n    import { ObjectHelper } from '../../utils/ObjectHelper';\r\n    import WarningModal from '../WarningModal.svelte'\r\n    import {ManagementService} from \"../../services/management.service\";\r\n    import { createEventDispatcher } from 'svelte';\r\n\r\n    const dispatch = createEventDispatcher();\r\n    \r\n    const managementService = ManagementService.getInstance();\r\n\r\n    export let show = false, editType = 'ADD';\r\n\r\n    let showWarningModal = false, warningModalMessage = '';\r\n    let password = null, oldPassword = null, newPassword = null;\r\n\r\n    onMount(() => {\r\n        window.addEventListener(\"keyup\", (event) => {\r\n            if (show && event.key === 'Enter') {\r\n                onSubmit();\r\n            }\r\n            if (show && event.key === 'Escape') {\r\n                onClose();\r\n            }\r\n        })\r\n    });\r\n\r\n    function onClose() {\r\n        password = null;\r\n        newPassword = null;\r\n        oldPassword = null;\r\n        show = false;\r\n    }\r\n\r\n    async function onSubmit() {\r\n        let res = null;\r\n        if (editType === 'ADD') {\r\n            if (ObjectHelper.isNotNullOrUndefined(password) && password.length >= 8) {\r\n                res = await managementService.addPassword(password);\r\n                if (res.status === 200) {\r\n                    onClose();\r\n                    dispatch('passwordAdded', {});\r\n                } else {\r\n                    warningModalMessage = 'დაფიქსირდა შეცდომა პაროლის დამატების დროს';\r\n                    showWarningModal = true;\r\n                }\r\n            }\r\n        } else {\r\n            if (ObjectHelper.isNotNullOrUndefined(oldPassword) && oldPassword.length >= 8 &&\r\n            ObjectHelper.isNotNullOrUndefined(newPassword) && newPassword.length >= 8) {\r\n                res = await managementService.changePassword(oldPassword, newPassword);\r\n                if (res.status === 200) {\r\n                    onClose();\r\n                } else {\r\n                    warningModalMessage = 'დაფიქსირდა შეცდომა პაროლის შეცვლის დროს';\r\n                    showWarningModal = true;\r\n                }\r\n            }\r\n        }\r\n\t}\r\n\r\n</script>\r\n  \r\n<style> \r\n  \r\n    .form-group {\r\n        display: flex;\r\n        justify-content: flex-end;\r\n        align-items: center;\r\n    }\r\n\r\n    .label {\r\n        display: flex;\r\n        align-items: center;\r\n        margin-right: 15px;\r\n    }\r\n\r\n</style>\r\n  \r\n{#if show}\r\n<div class=\"popup active\" id=\"popup-1\">\r\n    <div class=\"overlay\" on:click={onClose}></div>\r\n        <div class=\"content\">  \r\n        <h5 class=\"modal-title\">პაროლის დამატება</h5>\r\n        <hr>\r\n        \r\n        {#if editType === 'ADD'}\r\n            <div class=\"form-group\">\r\n                <div class=\"label\">პაროლი:&nbsp;<span class=\"required-field\" title=\"პაროლი უნდა იყოს&#013;მინიმუმ 8 სიგრძის\">*</span></div>\r\n                <input type=\"text\" autocomplete=\"off\" minlength=\"8\" required class=\"form-control password-text-field\" bind:value={password}>\r\n            </div>  \r\n        {:else}\r\n            <div class=\"form-group\">\r\n                <div class=\"label\">ძველი&nbsp;პაროლი:&nbsp;<span class=\"required-field\" title=\"პაროლი უნდა იყოს&#013;მინიმუმ 8 სიგრძის\">*</span></div>\r\n                <input type=\"text\" autocomplete=\"off\" minlength=\"8\" required class=\"form-control password-text-field\" bind:value={oldPassword}>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <div class=\"label\">ახალი&nbsp;პაროლი:&nbsp;<span class=\"required-field\" title=\"პაროლი უნდა იყოს&#013;მინიმუმ 8 სიგრძის\">*</span></div>\r\n                <input type=\"text\" autocomplete=\"off\" minlength=\"8\" required class=\"form-control password-text-field\" bind:value={newPassword}>\r\n            </div>  \r\n        {/if}\r\n\r\n        <hr>\r\n        <div>\r\n            <button class=\"btn btn-primary confirmButton\" on:click={onSubmit}>დასტური</button>\r\n            <button class=\"btn btn-primary closeButton\" on:click={onClose}>დახურვა</button>\r\n        </div>\r\n    </div>\r\n</div>\r\n{/if}\r\n\r\n<WarningModal\r\nbind:show={showWarningModal}\r\nbind:message={warningModalMessage}\r\n/>",
    "<script>\r\n    import {HistoryService} from \"../../services/history.service\";\r\n    import { ParameterService } from \"../../services/parameter.service\";\r\n    import { onMount } from 'svelte';\r\n    import WarningModal from '../WarningModal.svelte'\r\n    import { ExcelGenerator } from \"../../utils/ExcelGenerator\";\r\n    import { DateFormats } from \"../../utils/DateFormats\"\r\n  \r\n    const ParameterType = {\r\n        INTEGER: \"რიცხვი\",\r\n        STRING: \"ტექსტი\",\r\n        LIST: \"სია\"\r\n    }\r\n  \r\n    let ProductType = [\r\n        \"სხვა\"\r\n    ]\r\n  \r\n    export let show;\r\n  \r\n    const historyService = HistoryService.getInstance();\r\n    const parameterService = ParameterService.getInstance();\r\n  \r\n    let filterProductCode = null, filterProductName = null, filterProductType = 'ყველა', \r\n    filterBenefitFrom = null, filterBenefitTo = null, filterSellDateFrom = null, filterSellDateTo = null, filterOfficial = true;\r\n    let fileName = \"გაყიდვის ისტორია\";\r\n    let showWarningModal = false, warningModalMessage = '';\r\n    \r\n    onMount(() => {\r\n        addEventListener(\"keyup\", (event) => {\r\n            if (show && event.key === 'Enter') {\r\n                onSubmit();\r\n            }\r\n            if (show && event.key === 'Escape') {\r\n                onClose();\r\n            }\r\n        });\r\n    \r\n        initializeParameters()\r\n    });\r\n  \r\n    async function initializeParameters() {\r\n        let res = await parameterService.getParameter(\"productTypes\", ParameterType.LIST, [\"სხვა\"]);\r\n        ProductType = ('' + res.value).split(\",\");\r\n        ProductType.push('ყველა')\r\n    }\r\n    \r\n    async function onSubmit() {\r\n        const columnNames = ['კოდი', 'სახელი', 'ტიპი', 'გაყიდვის თარიღი', 'გაყიდული რაოდენობა', 'ასაღები ფასი', 'გასაყიდი ფასი', 'მოგება'];\r\n        let filters = {\r\n            productCode: filterProductCode,\r\n            productName: filterProductName,\r\n            productType: filterProductType,\r\n            benefitFrom: filterBenefitFrom,\r\n            benefitTo: filterBenefitTo,\r\n            sellDateFrom: filterSellDateFrom,\r\n            sellDateTo: filterSellDateTo,\r\n            official: filterOfficial\r\n        }\r\n        let filteredHistories = await historyService.findHistories(filters, 0, 0, 0);\r\n        let content = [[]];\r\n        filteredHistories.forEach(history => {\r\n            let currRow = [];\r\n            currRow.push(history.productCode)\r\n            currRow.push(history.productName)\r\n            currRow.push(history.productType)\r\n            currRow.push(DateFormats.formatDate(history.sellDate))\r\n            currRow.push(history.amount)\r\n            currRow.push(history.originalPrice)\r\n            currRow.push(history.sellingPrice)\r\n            currRow.push(history.benefit)\r\n            content.push(currRow);\r\n        })\r\n        ExcelGenerator.saveWithOneSheet(\"გაყიდვის ისტორია\", \"გაყიდვის ისტორია\", \"ზ\", fileName, fileName, columnNames, content)\r\n        onClose();\r\n    }\r\n  \r\n    function onClose() {\r\n        filterProductCode = null, filterProductName = null, filterProductType = 'ყველა';\r\n        filterBenefitFrom = null, filterBenefitTo = null, filterSellDateFrom = null, filterSellDateTo = null, filterOfficial = true;\r\n        fileName = \"გაყიდვის ისტორია\";\r\n        show = false;\r\n    }\r\n  \r\n</script>\r\n  \r\n<style>\r\n    \r\n    .form-group {\r\n        display: flex;\r\n        justify-content: flex-end;\r\n        align-items: center;\r\n    }\r\n  \r\n    .form-control {\r\n        width: 300px;\r\n    }\r\n\r\n    #official {\r\n        height: 17px;\r\n        box-shadow: none;\r\n    }\r\n  \r\n</style>\r\n  \r\n{#if show}\r\n<div class=\"popup active\" id=\"popup-1\">\r\n    <div class=\"overlay\" on:click={onClose}></div>\r\n        <div class=\"content\">  \r\n            <h5 class=\"modal-title\">გაყიდვის ისტორიის რეპორტი</h5>\r\n            <hr>\r\n            <div class=\"form-group\">\r\n                <div>ფაილის სახელი:&emsp;</div>\r\n                <input type=\"text\" class=\"form-control\" bind:value={fileName}>\r\n            </div>\r\n\r\n            <div class=\"form-group\">\r\n                <div>კოდი:&emsp;</div>\r\n                <input type=\"text\" class=\"form-control\" bind:value={filterProductCode}>\r\n            </div>\r\n            \r\n            <div class=\"form-group\">\r\n                <div>სახელი:&emsp;</div>\r\n                <input type=\"text\" class=\"form-control\" bind:value={filterProductName}>\r\n            </div>\r\n            \r\n            <div class=\"form-group\">\r\n                <div>ტიპი:&emsp;</div>\r\n                <select class=\"form-control\" bind:value={filterProductType}>\r\n                    {#each Object.values(ProductType) as productType}\r\n                    <option>{productType}</option>\r\n                    {/each}\r\n                </select>\r\n            </div>\r\n            \r\n            <div class=\"form-group\">\r\n                <div>საწყისი&nbsp;მოგება:&emsp;</div>\r\n                <input type=\"number\" class=\"form-control\" bind:value={filterBenefitFrom}>\r\n            </div>\r\n            \r\n            <div class=\"form-group\">\r\n                <div>საბოლოო&nbsp;მოგება:&emsp;</div>\r\n                <input type=\"number\" class=\"form-control\" bind:value={filterBenefitTo}>\r\n            </div>\r\n            \r\n            <div class=\"form-group\">\r\n                <div>გაყიდვის საწყისი თარიღი:&emsp;</div>\r\n                <input type=\"date\" class=\"form-control\" id=\"amount\" bind:value={filterSellDateFrom}>\r\n            </div>\r\n            \r\n            <div class=\"form-group\">\r\n                <div>გაყიდვის საბოლოო თარიღი:&emsp;</div>\r\n                <input type=\"date\" class=\"form-control\" id=\"amount\" bind:value={filterSellDateTo}>\r\n            </div>\r\n            \r\n            <div class=\"form-group\">\r\n                <div>ოფიციალური:&emsp;</div>\r\n                <input type=\"checkbox\" class=\"form-control\" id=\"official\" bind:checked={filterOfficial}>\r\n            </div>\r\n            <hr>\r\n            <div>\r\n                <button class=\"btn btn-primary confirmButton\" on:click={onSubmit}>გენერაცია</button>\r\n                <button class=\"btn btn-primary closeButton\" on:click={onClose}>დახურვა</button>\r\n            </div>\r\n    </div>\r\n</div>\r\n{/if}\r\n  \r\n  \r\n<WarningModal\r\nbind:show={showWarningModal}\r\nbind:message={warningModalMessage}\r\n/>",
    "<script>\r\n    import {ProductService} from \"../../services/product.service\";\r\n    import { ParameterService } from \"../../services/parameter.service\";\r\n    import { onMount } from 'svelte';\r\n    import WarningModal from '../WarningModal.svelte'\r\n    import { ExcelGenerator } from \"../../utils/ExcelGenerator\";\r\n    import { DateFormats } from \"../../utils/DateFormats\"\r\n  \r\n    const ParameterType = {\r\n        INTEGER: \"რიცხვი\",\r\n        STRING: \"ტექსტი\",\r\n        LIST: \"სია\"\r\n    }\r\n  \r\n    let ProductType = [\r\n        \"სხვა\"\r\n    ]\r\n\r\n    const QuantityType = {\r\n        COUNT: \"ცალობითი\",\r\n        WEIGHT: \"წონითი\"\r\n    }\r\n  \r\n    export let show;\r\n  \r\n    const productService = ProductService.getInstance();\r\n    const parameterService = ParameterService.getInstance();\r\n  \r\n    let filterCode = null, filterName = null, filterType = 'ყველა', filterStartPrice = null, filterEndPrice = null,\r\n    filterStartLastChangeDate = null, filterEndlastChangeDate = null, filterOfficial = true;\r\n    let fileName = \"პროდუქცია\";\r\n    let showWarningModal = false, warningModalMessage = '';\r\n    \r\n    onMount(() => {\r\n        addEventListener(\"keyup\", (event) => {\r\n            if (show && event.key === 'Enter') {\r\n                onSubmit();\r\n            }\r\n            if (show && event.key === 'Escape') {\r\n                onClose();\r\n            }\r\n        });\r\n    \r\n        initializeParameters()\r\n    });\r\n  \r\n    async function initializeParameters() {\r\n        let res = await parameterService.getParameter(\"productTypes\", ParameterType.LIST, [\"სხვა\"]);\r\n        ProductType = ('' + res.value).split(\",\");\r\n        ProductType.push('ყველა');\r\n    }\r\n    \r\n    async function onSubmit() {\r\n        const columnNames = ['კოდი', 'სახელი', 'ტიპი', 'ჯამური გასაყიდი ფასი', 'ჯამური ასაღები ფასი', 'გასაყიდი ფასი', 'ასაღები ფასი', \r\n        'რაოდენობა', 'რაოდ. ტიპი', 'ოფიციალური', 'განახლების თარიღი', 'შექმნის თარიღი'];\r\n        let filters = {\r\n            code: filterCode,\r\n            name: filterName,\r\n            productType: filterType,\r\n            startPrice: filterStartPrice,\r\n            endPrice: filterEndPrice,\r\n            startLastChangeDate: filterStartLastChangeDate,\r\n            endLastChangeDate: filterEndlastChangeDate,\r\n            official: filterOfficial\r\n        }\r\n        let filteredProducts = await productService.findProducts(filters)\r\n        let content = [[]];\r\n        filteredProducts.forEach(prod => {\r\n            let currRow = [];\r\n            currRow.push(prod.code);\r\n            currRow.push(prod.name);\r\n            currRow.push(prod.productType);\r\n            currRow.push((prod.sellingPrice * getWholeQuantity(prod)).toFixed(2));\r\n            currRow.push((prod.originalPrice * getWholeQuantity(prod)).toFixed(2));\r\n            currRow.push(prod.sellingPrice);\r\n            currRow.push(prod.originalPrice);\r\n            currRow.push(prod.quantity.reduce((res, qt) => { return res + qt.quantity + \r\n                                                            (qt.quantityType == QuantityType.COUNT ? 'ც.' : 'კგ.') + \r\n                                                            ' - ' + qt.originalPrice + '₾; '}, ''));\r\n            currRow.push(prod.quantityType);\r\n            currRow.push(prod.official ? \"კი\" : \"არა\");\r\n            currRow.push(DateFormats.formatDateTime(prod.lastChangeDate));\r\n            currRow.push(DateFormats.formatDateTime(prod.createDate));\r\n            content.push(currRow);\r\n        })\r\n        ExcelGenerator.saveWithOneSheet(\"პროდუქცია\", \"პროდუქცია\", \"ზ\", fileName, fileName, columnNames, content)\r\n        onClose();\r\n    }\r\n  \r\n    function onClose() {\r\n        filterCode = null, filterName=null, filterType='ყველა', filterStartPrice=null, filterEndPrice=null;\r\n        filterStartLastChangeDate = null, filterEndlastChangeDate = null, filterOfficial = true;\r\n        fileName = \"პროდუქცია\";\r\n        show = false;\r\n    }\r\n\r\n    function getWholeQuantity(prod) {\r\n        return prod.quantity.reduce((sum1, qt) => { return sum1 + qt.quantity}, 0);\r\n    }\r\n  \r\n</script>\r\n  \r\n<style>\r\n    \r\n    .form-group {\r\n        display: flex;\r\n        justify-content: flex-end;\r\n        align-items: center;\r\n    }\r\n  \r\n    .form-control {\r\n        width: 300px;\r\n    }\r\n  \r\n    #official {\r\n        height: 17px;\r\n        box-shadow: none;\r\n    }\r\n\r\n</style>\r\n  \r\n{#if show}\r\n<div class=\"popup active\" id=\"popup-1\">\r\n    <div class=\"overlay\" on:click={onClose}></div>\r\n        <div class=\"content\">  \r\n            <h5 class=\"modal-title\">პროდუქციის რეპორტი</h5>\r\n            <hr>\r\n            <div class=\"form-group\">\r\n                <div>ფაილის სახელი:&emsp;</div>\r\n                <input type=\"text\" class=\"form-control\" bind:value={fileName}>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <div>კოდი:&emsp;</div>\r\n                <input type=\"text\" class=\"form-control\" bind:value={filterCode}>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <div>სახელი:&emsp;</div>\r\n                <input type=\"text\" class=\"form-control\" bind:value={filterName}>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <div>ტიპი:&emsp;</div>\r\n                <select class=\"form-control\" bind:value={filterType}>\r\n                    {#each Object.values(ProductType) as productType}\r\n                    <option>{productType}</option>\r\n                    {/each}\r\n                </select>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <div>საწყისი&nbsp;ფასი:&emsp;</div>\r\n                <input type=\"number\" class=\"form-control\" bind:value={filterStartPrice}>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <div>საბოლოო&nbsp;ფასი:&emsp;</div>\r\n                <input type=\"number\" class=\"form-control\" bind:value={filterEndPrice}>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <div>ცვლილების საწყისი თარიღი:&emsp;</div>\r\n                <input type=\"datetime-local\" class=\"form-control\" id=\"amount\" bind:value={filterStartLastChangeDate}>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <div>ცვლილების საბოლოო თარიღი:&emsp;</div>\r\n                <input type=\"datetime-local\" class=\"form-control\" id=\"amount\" bind:value={filterEndlastChangeDate}>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <div>ოფიციალური:&emsp;</div>\r\n                <input type=\"checkbox\" class=\"form-control\" id=\"official\" bind:checked={filterOfficial}>\r\n            </div>\r\n            <hr>\r\n            <div>\r\n                <button class=\"btn btn-primary confirmButton\" on:click={onSubmit}>გენერაცია</button>\r\n                <button class=\"btn btn-primary closeButton\" on:click={onClose}>დახურვა</button>\r\n            </div>\r\n    </div>\r\n</div>\r\n{/if}\r\n  \r\n  \r\n<WarningModal\r\nbind:show={showWarningModal}\r\nbind:message={warningModalMessage}\r\n/>",
    "<script>\r\n    import {DeviceDetectorService} from \"../services/deviceDetector.service\";\r\n    import { navigate } from \"svelte-routing\";\r\n    import {HistoryService} from \"../services/history.service\";\r\n    import {ProductService} from \"../services/product.service\";\r\n    import { onMount } from 'svelte';\r\n    import { DateFormats } from \"../utils/DateFormats\";\r\n    import HistoryReport from \"../components/reports/HistoryReport.svelte\";\r\n    import DeleteModal from \"../components/DeleteModal.svelte\";\r\n    import {ObjectHelper} from \"../utils/ObjectHelper\"\r\n    import {AutoCompleteHelper} from \"../utils/AutoCompleteHelper\"\r\n\r\n    export let show = {};\r\n    \r\n    const QuantityType = {\r\n        COUNT: \"ცალობითი\",\r\n        WEIGHT: \"წონითი\"\r\n    }\r\n\r\n    const DEFAULT_PAGINATION_LIMIT = 5;\r\n    const PAGES_BEFORE_AND_AFTER = 4;\r\n    const HOUR_IN_MILISECONDS = 36e+5;\r\n    \r\n    const today = new Date();\r\n    let historyService = HistoryService.getInstance();\r\n    let productService = ProductService.getInstance();\r\n\r\n    let deleteModalShow = false, deleteModalSubmited = false, toDeleteId = null;\r\n    let toolbarShown = false, filterCode = '', filterName='', filterType='', filterStartDate=null, filterEndDate=null;\r\n    let columnNames = ['კოდი', 'სახელი', 'ტიპი', 'თარიღი', 'რაოდენობა', 'ჯამ. გასა. ფასი', 'გასაყიდი ფასი', 'ასაღები ფასი', 'მოგება'];\r\n    let marked = DateFormats.formatDate(today);\r\n    let pages = [DateFormats.formatDate(new Date(today.getTime() - 48 * HOUR_IN_MILISECONDS)), DateFormats.formatDate(new Date(today.getTime() - 24 * HOUR_IN_MILISECONDS)), DateFormats.formatDate(today)];\r\n\r\n    let histories = [], allHistories = [];\r\n\r\n    let allProducts = [], allProductCodes = [], allProductNames = [];\r\n    onMount(async () => {\r\n        allProducts = await productService.getProducts();\r\n        allProductCodes = allProducts.map(prod => prod.code);\r\n        allProductNames = allProducts.map(prod => prod.name);\r\n\r\n        if(DeviceDetectorService.isBrowser) {\r\n        let url = new URL(window.location.href);\r\n        marked = url.searchParams.get('date') || DateFormats.formatDate(today);\r\n        filterCode = url.searchParams.get('code') || '';\r\n        filterName = url.searchParams.get('name') || '';\r\n        filterType = url.searchParams.get('type') || '';\r\n        filterStartDate = url.searchParams.get('start') || null;\r\n        filterEndDate = url.searchParams.get('end') || null;\r\n        show.showToolbar = filterType || filterName || filterCode;\r\n    }\r\n    })\r\n\r\n    async function filterHistory() {\r\n        if(!DeviceDetectorService.isBrowser) return;\r\n        marked = DateFormats.formatDate(today);\r\n        let url = new URL(window.location.href);\r\n        url.searchParams.set('code', filterCode || '');\r\n        url.searchParams.set('name', filterName || '');\r\n        url.searchParams.set('type', filterType || '');\r\n        url.searchParams.set('start', filterStartDate || '');\r\n        url.searchParams.set('end', filterEndDate || '');\r\n        navigate(url.toString());\r\n        getFilteredData(true);\r\n    }\r\n\r\n    async function getFilteredData(state) {\r\n        if(!DeviceDetectorService.isBrowser) return;\r\n        let filters = {\r\n            productCode: filterCode,\r\n            productName: filterName,\r\n            productType: filterType,\r\n            sellDateFrom: (state ? filterStartDate : DateFormats.toDate(marked)),\r\n            sellDateTo: (state ? filterEndDate : new Date(DateFormats.toDate(marked).getTime() + 24 * HOUR_IN_MILISECONDS))\r\n        }\r\n        allHistories = await historyService.findHistories(filters, 0, 0, 0);\r\n        allHistories.forEach(h => {\r\n            h.sellDate = new Date(h.sellDate);\r\n        });\r\n        histories = allHistories;\r\n        histories = histories.sort(function(a,b){\r\n            return new Date(b.createDate) - new Date(a.createDate);\r\n        });\r\n    }\r\n\r\n    function clearFilters() {\r\n        filterCode = '', filterName='', filterType='', filterStartDate=null, filterEndDate=null;\r\n    }\r\n\r\n    function onBack() {\r\n        marked = pages[1];\r\n    }\r\n\r\n    function onNext() {\r\n        if(marked != DateFormats.formatDate(today)) marked = pages[3];\r\n    }\r\n\r\n    function onDelete(historyId) {\r\n        toDeleteId = historyId;\r\n        deleteModalShow = true;\r\n    }\r\n\r\n    $: {\r\n        if(DeviceDetectorService.isBrowser) {\r\n            let url = new URL(window.location.href);\r\n            url.searchParams.set('date', marked);\r\n            navigate(url.toString());\r\n        }\r\n        let tmp = DateFormats.toDate(marked);\r\n        pages = [DateFormats.formatDate(new Date(tmp.getTime() - 48 * HOUR_IN_MILISECONDS)), \r\n                DateFormats.formatDate(new Date(tmp.getTime() - 24 * HOUR_IN_MILISECONDS)), \r\n                DateFormats.formatDate(tmp)];\r\n        if(new Date(tmp.getTime() + 24 * HOUR_IN_MILISECONDS) <= today) pages.push(DateFormats.formatDate(new Date(tmp.getTime() + 24 * HOUR_IN_MILISECONDS)));\r\n        if(new Date(tmp.getTime() + 48 * HOUR_IN_MILISECONDS) <= today) pages.push(DateFormats.formatDate(new Date(tmp.getTime() + 48 * HOUR_IN_MILISECONDS)));\r\n        getFilteredData(false);\r\n\r\n        if (deleteModalSubmited) {\r\n            deleteModalIsSubmited();\r\n        }\r\n    }\r\n\r\n    $: {\r\n        if (show.showToolbar) {\r\n            if (!toolbarShown) {\r\n                setTimeout(() => {\r\n                    AutoCompleteHelper.autocomplete(document.getElementById(\"product-code-filter\"), allProductCodes, (v) => {\r\n                        filterCode = v;\r\n                        filterHistory();\r\n                    });\r\n                    AutoCompleteHelper.autocomplete(document.getElementById(\"product-name-filter\"), allProductNames, (v) => {\r\n                        filterName = v;\r\n                        filterHistory();\r\n                    });\r\n                }, 150);\r\n            }\r\n            toolbarShown = show.showToolbar;\r\n        } else {\r\n            toolbarShown = false;\r\n        }\r\n    }\r\n\r\n    function deleteModalIsSubmited() {\r\n        marked = marked;\r\n        deleteModalSubmited = false;\r\n    }\r\n\r\n</script>\r\n\r\n<style>\r\n    td {\r\n        border: 1px solid #fefefe;\r\n        height: 50px;\r\n    }\r\n\r\n    th {\r\n        text-align: center;\r\n        height: 50px\r\n    }\r\n\r\n    .toolbar {\r\n        margin: 10px 0;\r\n        display: flex;\r\n        justify-content: flex-start;\r\n        align-items: center;\r\n    }\r\n\r\n    .toolbar-item {\r\n        margin: 0 10px;\r\n        font-style: italic;\r\n    }\r\n\r\n    .date-filters {\r\n        max-width: 250px;\r\n    }\r\n\r\n    .page-link {\r\n        background-color: #f3f3f3;\r\n        color: black;\r\n    }\r\n\r\n    .page-item.active .page-link {\r\n        z-index: 1;\r\n        color: #fff;\r\n        background-color: #3cb5cf;\r\n        border-color: transparent !important;\r\n    }\r\n\r\n    .actionsTh {\r\n        width: 1%;\r\n        padding: 2px;\r\n        padding-right: 5px;\r\n        text-align: end;\r\n    }\r\n\r\n    .actionButtonsDiv {\r\n        display: flex;\r\n        justify-content: flex-end;\r\n    }\r\n\r\n    .sum-tr {\r\n        background-color: lightsteelblue;\r\n    }\r\n\r\n    .sum-td {\r\n        font-weight: bold;\r\n    }\r\n\r\n    .sum-empty-td {\r\n        border: none;\r\n    }\r\n\r\n    .financial-td {\r\n        text-align: end;\r\n    }\r\n\r\n</style>\r\n\r\n{#if show.showToolbar}\r\n<!-- svelte-ignore a11y-missing-attribute -->\r\n<iframe name=\"decoy_iframe\" style=\"display:none;\"></iframe>\r\n<form autocomplete=\"off\" class=\"toolbar\" id=\"toolbar\" action=\"#\" target=\"decoy_iframe\" on:submit={filterHistory}>\r\n    <div class=\"form-group toolbar-item toolbar autocomplete\">\r\n        <span>კოდი:&emsp;</span>\r\n        <input id=\"product-code-filter\" type=\"text\" class=\"form-control\" bind:value={filterCode}>\r\n    </div>\r\n\r\n    <div class=\"form-group toolbar-item toolbar autocomplete\">\r\n        <span>სახელი:&emsp;</span>\r\n        <input id=\"product-name-filter\" type=\"text\" class=\"form-control\" bind:value={filterName}>\r\n    </div>\r\n\r\n    <div class=\"toolbar-item toolbar\">\r\n        <span>ტიპი:&emsp;</span>\r\n        <input type=\"text\" class=\"form-control\" bind:value={filterType}>\r\n    </div>\r\n\r\n    <div class=\"toolbar-item toolbar\">\r\n        <span>საწყისი&nbsp;თარიღი:&emsp;</span>\r\n        <input type=\"date\" class=\"form-control date-filters\" bind:value={filterStartDate}>\r\n    </div>\r\n\r\n    <div class=\"toolbar-item toolbar\">\r\n        <span>საბოლოო&nbsp;თარიღი:&emsp;</span>\r\n        <input type=\"date\" class=\"form-control date-filters\" bind:value={filterEndDate}>\r\n    </div>\r\n\r\n    <input type=\"submit\" style=\"height: 0px; width: 0px; border: none; padding: 0px;\" hidefocus=\"true\" />\r\n    \r\n    <!-- svelte-ignore a11y-missing-attribute -->\r\n    <div title=\"ძებნა\">\r\n        <img src=\"images/search.png\" width=\"27px\" height=\"27px\" style=\"margin: 0 8px; cursor: pointer;\"\r\n            on:click={filterHistory}>\r\n    </div>\r\n    \r\n    <!-- svelte-ignore a11y-missing-attribute -->\r\n    <div title=\"ფილტრის გასუფთავება\">\r\n        <img src=\"images/clearFilters.ico\" width=\"27px\" height=\"27px\" style=\"margin: 0 8px; cursor: pointer;\"\r\n            on:click={clearFilters}>\r\n    </div>\r\n</form>\r\n{/if}\r\n\r\n<table class=\"table\">\r\n    <thead>\r\n    <tr>\r\n        {#each columnNames as column}\r\n            <th scope=\"col\" style=\"width: 14%;\">{column}</th>\r\n        {/each}\r\n        <th class=\"actionsTh\" scope=\"col\"></th>\r\n    </tr>\r\n    </thead>\r\n    <tbody>\r\n        <tr class=\"sum-tr\">\r\n            <td class=\"sum-empty-td sum-td\">ჯამური:</td>\r\n            <td class=\"sum-empty-td sum-td\"></td>\r\n            <td class=\"sum-empty-td sum-td\"></td>\r\n            <td class=\"sum-empty-td sum-td\"></td>\r\n            <td class=\"financial-td sum-td\">{\r\n                histories.reduce((sum, hist) => { return (ObjectHelper.isNullOrUndefined(hist.quantityType) || hist.quantityType == QuantityType.COUNT) ? sum + hist.amount : sum }, 0) + \" ც; \" +\r\n                histories.reduce((sum, hist) => { return (ObjectHelper.isNotNullOrUndefined(hist.quantityType) && hist.quantityType == QuantityType.WEIGHT) ? sum + hist.amount : sum }, 0).toFixed(3) + \" კგ.\"\r\n            }\r\n            </td>\r\n            <td class=\"financial-td sum-td\">{histories.reduce((sum, hist) => { return sum + hist.sellingPrice * hist.amount }, 0).toFixed(2)} ₾</td>\r\n            <td class=\"financial-td sum-td\">{histories.reduce((sum, hist) => { return sum + hist.sellingPrice }, 0).toFixed(2)} ₾</td>\r\n            <td class=\"financial-td sum-td\">{histories.reduce((sum, hist) => { return sum + hist.originalPrice }, 0).toFixed(2)} ₾</td>\r\n            <td class=\"financial-td sum-td\">{histories.reduce((sum, hist) => { return sum + hist.benefit }, 0).toFixed(2)} ₾</td>\r\n            <td class=\"sum-empty-td sum-td\"></td>\r\n        </tr>\r\n        {#each histories as history, i}\r\n        <tr>\r\n            <td>{history.productCode}</td>\r\n            <td>{history.productName}</td>\r\n            <td>{history.productType}</td>\r\n            <td>{DateFormats.formatDate(history.sellDate)}</td>\r\n            <td>{Number.isInteger(history.amount) ? history.amount : history.amount.toFixed(3)}</td>\r\n            <td style=\"text-align: end;\">{(history.sellingPrice * history.amount).toFixed(2)} ₾</td>\r\n            <td style=\"text-align: end;\">{history.sellingPrice.toFixed(2)} ₾</td>\r\n            <td style=\"text-align: end;\">{history.originalPrice.toFixed(2)} ₾</td>\r\n            <td style=\"text-align: end;\">{history.benefit.toFixed(2)} ₾</td>\r\n            <td style=\"padding-right: 5px;\">\r\n                <div class=\"actionButtonsDiv\">\r\n                    <div class=\"leftTooltipIconDiv\" title=\"წაშლა\" style=\"margin-right: 5px;\">\r\n                        <!-- svelte-ignore a11y-missing-attribute -->\r\n                        <input type=\"image\" src=\"images/delete.png\" class=\"actionButtons\" width=\"27px\" height=\"27px\"\r\n                            on:click={async () => {\r\n                                onDelete(history._id)\r\n                            }}>\r\n                    </div>\r\n                </div>\r\n            </td>\r\n        </tr>\r\n        {/each}\r\n    </tbody>\r\n</table>\r\n\r\n<nav aria-label=\"...\">\r\n    <ul class=\"pagination justify-content-center\">\r\n        <li class=\"page-item\">\r\n            <button class=\"page-link\" on:click={onBack}>\r\n                უკან\r\n            </button>\r\n        </li>\r\n        {#each pages as page, i}\r\n                <li class={\"page-item \" + (marked===page ? \"active\" : \"\")}>\r\n                    <button class=\"page-link\" on:click={()=>{marked = page}}>\r\n                        {page}\r\n                    </button>\r\n                </li>\r\n        {/each}\r\n        <li class=\"page-item\">\r\n            <button class=\"page-link\" on:click={onNext}>\r\n                წინ\r\n            </button>\r\n        </li>\r\n    </ul>\r\n</nav>\r\n\r\n<HistoryReport\r\nbind:show={show.showHistoryReport}\r\n/>\r\n\r\n<DeleteModal\r\nbind:show={deleteModalShow}\r\nbind:submited={deleteModalSubmited}\r\nbind:toDeleteId={toDeleteId}\r\nbind:service={historyService}\r\n/>",
    "<script>\r\n    import {HistoryService} from \"../services/history.service\";\r\n    import {ProductService} from \"../services/product.service\";\r\n    import { onMount } from 'svelte';\r\n    import DetailedProducts from \"../components/DetailedProducts.svelte\";\r\n    import { AutoCompleteHelper } from \"../utils/AutoCompleteHelper\";\r\n    \r\n    const historyService = HistoryService.getInstance();\r\n    const productService = ProductService.getInstance();\r\n    const date = new Date();\r\n\r\n    let filterName='', filterType='', filterStartDate=new Date(date.getFullYear(), 0, 1), filterEndDate=null;\r\n    let productsSold = {}, yearlyBenefit = 0, monthlyBenefit = 0, dailyBenefit = 0, yearlySellingPrice = 0, monthlySellingPrice = 0, dailySellingPrice = 0;\r\n    let showDetailedProducts = false, detailedAmounts = {};\r\n\r\n    let allProducts = [], allProductNames = [];\r\n    \r\n    onMount(async () => {\r\n        allProducts = await productService.getProducts();\r\n        allProductNames = allProducts.map(prod => prod.name);\r\n\r\n        addEventListener(\"keyup\", (event) => {\r\n            if (event.key === 'Enter') {\r\n                filterData();\r\n            }\r\n        });\r\n        filterData();\r\n\r\n        setTimeout(() => {\r\n            AutoCompleteHelper.autocomplete(document.getElementById(\"product-name-filter\"), allProductNames, (v) => filterName = v);\r\n        }, 700);\r\n    })\r\n\r\n    async function filterData() {\r\n        productsSold = {}, yearlyBenefit = 0, monthlyBenefit = 0, dailyBenefit = 0, yearlySellingPrice = 0, monthlySellingPrice = 0, dailySellingPrice = 0, detailedAmounts = {};\r\n        let filters = {\r\n            productName: filterName,\r\n            productType: filterType,\r\n            sellDateFrom: filterStartDate,\r\n            sellDateTo: filterEndDate\r\n        }\r\n        let allHistories = await historyService.findHistories(filters, 0, 0, 0);\r\n        allHistories.forEach(history => {\r\n            history.sellDate = new Date(history.sellDate);\r\n            if (!(history.productName in productsSold)) {\r\n                productsSold[history.productName] = {\r\n                    amount: 0,\r\n                    yearlyBenefit: 0,\r\n                    yearlySellingPrice: 0,\r\n                    monthlyBenefit: 0,\r\n                    monthlySellingPrice: 0,\r\n                    dailyBenefit: 0,\r\n                    dailySellingPrice: 0\r\n                };\r\n            }\r\n            const currAmount = history.amount;\r\n            const currBenefit = history.benefit;\r\n            const currWholeSellingPrice = history.sellingPrice * currAmount;\r\n            productsSold[history.productName].amount += currAmount;\r\n            productsSold[history.productName].yearlyBenefit += currBenefit;\r\n            productsSold[history.productName].yearlySellingPrice += currWholeSellingPrice;\r\n            if (date.getFullYear() === history.sellDate.getFullYear() && date.getMonth() === history.sellDate.getMonth()) {\r\n                productsSold[history.productName].monthlyBenefit += currBenefit;\r\n                productsSold[history.productName].monthlySellingPrice += currWholeSellingPrice;\r\n            }\r\n            if (new Date().toDateString() == history.sellDate.toDateString()) { \r\n                productsSold[history.productName].dailyBenefit += currBenefit;\r\n                productsSold[history.productName].dailySellingPrice += currWholeSellingPrice;\r\n            }\r\n        })\r\n        for (const [key, value] of Object.entries(productsSold)) {\r\n            yearlyBenefit += value.yearlyBenefit;\r\n            yearlySellingPrice += value.yearlySellingPrice;\r\n            monthlyBenefit += value.monthlyBenefit;\r\n            monthlySellingPrice += value.monthlySellingPrice;\r\n            dailyBenefit += value.dailyBenefit;\r\n            dailySellingPrice += value.dailySellingPrice;\r\n            if (!(key in detailedAmounts)) detailedAmounts[key] = 0;\r\n            detailedAmounts[key] += value.amount;\r\n        }\r\n    }\r\n\r\n    function clearFilters() {\r\n        filterName='', filterType='', filterStartDate=null, filterEndDate=null;\r\n    }\r\n\r\n</script>\r\n\r\n<style>\r\n\r\n    .all-parts {\r\n        display: flex;\r\n        flex-direction: left;\r\n        justify-content: space-around;\r\n    }\r\n    \r\n    .toolbar {\r\n        display: flex;\r\n        flex-direction: column;\r\n        justify-content: space-between;\r\n        height: 500px;\r\n        margin-top: 70px;\r\n    }\r\n\r\n    .filter-header {\r\n        text-align: center;\r\n        font-weight: bold;\r\n        font-size: 19px;\r\n    }\r\n\r\n    .filter-pair {\r\n        display: flex;\r\n        flex-direction: column;\r\n        justify-content: space-between;\r\n        height: 90px;\r\n    }\r\n\r\n    .toolbar-item {\r\n        width: 400px;\r\n    }\r\n\r\n    .form-control {\r\n        height: 55px;\r\n        font-size: 20px;\r\n    }\r\n\r\n    .filter-buttons {\r\n        display: flex;\r\n        flex-direction: row;\r\n        justify-content: space-evenly;\r\n    }\r\n\r\n    .btn {\r\n        font-size: 17px;\r\n        height: 42px;\r\n    }\r\n\r\n    .btn-primary {\r\n        background-color: #3cb5cf;\r\n        border-color: #3cb5cf;\r\n    }\r\n\r\n    .divider-lines {\r\n        display: flex;\r\n        flex-direction: row;\r\n        width: 15px;\r\n        justify-content: space-around;\r\n    }\r\n\r\n    .vertical-line {\r\n        border-left: 4px solid white;\r\n        border-radius: 20px;\r\n        height: 620px;\r\n        margin-top: 30px;\r\n    }\r\n    \r\n    .results {\r\n        display: flex;\r\n        flex-direction: column;\r\n        justify-content: space-between;\r\n        height: 550px;   \r\n        margin-top: 50px;   \r\n    }\r\n\r\n    .result-info {\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-items: center;\r\n    }\r\n\r\n    .result-info-header {\r\n        font-size: 20px;\r\n        font-style: italic;\r\n        font-family: inherit;\r\n        font-weight: bold;\r\n    }\r\n\r\n    .result-info-pairs {\r\n        display: flex;\r\n        flex-direction: row;\r\n        width: 250px;\r\n        justify-content: space-between;\r\n    }\r\n\r\n    .result-pair {\r\n        display: flex;\r\n        flex-direction: column;\r\n        justify-content: space-between;\r\n        height: 70px;\r\n        text-align: center;\r\n    }\r\n    \r\n    .result-header {\r\n        font-size: 20px;\r\n        font-style: italic;\r\n        font-family: inherit;\r\n    }\r\n\r\n    .result-result {\r\n        font-size: 21px;\r\n        font-weight: bold;\r\n        font-family: inherit;\r\n    }\r\n\r\n    .result-count {\r\n        display: flex;\r\n        flex-direction: row;\r\n        justify-content: center;\r\n    }\r\n\r\n    .btn-details {\r\n        font-size: 14px;\r\n        height: 35px;\r\n        background-color:#006c84;\r\n        border-color:#006c84;\r\n    }\r\n\r\n    .result-winning {\r\n        color: #00c400;\r\n    }\r\n\r\n</style>\r\n\r\n<div class=\"all-parts\">\r\n    <div>\r\n        <div class=\"toolbar\">\r\n            <div class=\"toolbar-item\">\r\n                <div class=\"filter-pair autocomplete\">\r\n                    <div class=\"filter-header\">სახელი:&emsp;</div>\r\n                    <input id=\"product-name-filter\" type=\"text\" class=\"form-control\" bind:value={filterName}>\r\n                </div>\r\n            </div>\r\n        \r\n            <div class=\"toolbar-item\">\r\n                <div class=\"filter-pair\">\r\n                    <div class=\"filter-header\">ტიპი:&emsp;</div>\r\n                    <input type=\"text\" class=\"form-control\" bind:value={filterType}>\r\n                </div>\r\n            </div>\r\n        \r\n            <div class=\"toolbar-item\">\r\n                <div class=\"filter-pair\">\r\n                    <div class=\"filter-header\">საწყისი&nbsp;თარიღი:&emsp;</div>\r\n                    <input type=\"date\" class=\"form-control date-filters\" bind:value={filterStartDate}>\r\n                </div>\r\n            </div>\r\n        \r\n            <div class=\"toolbar-item\">\r\n                <div class=\"filter-pair\">\r\n                    <div class=\"filter-header\">საბოლოო&nbsp;თარიღი:&emsp;</div>\r\n                    <input type=\"date\" class=\"form-control date-filters\" bind:value={filterEndDate}>\r\n                </div>\r\n            </div>\r\n        \r\n            <div class=\"filter-buttons\">\r\n                <!-- svelte-ignore a11y-missing-attribute -->\r\n                    <button type=\"button\" class=\"btn btn-primary\" on:click={filterData}>ძებნა</button>\r\n                \r\n                <!-- svelte-ignore a11y-missing-attribute -->\r\n                    <button type=\"button\" class=\"btn btn-primary\" on:click={clearFilters}>ფილტრის გასუფთავება</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    \r\n    \r\n    <div class=\"divider-lines\">\r\n        <div class=\"vertical-line\"></div>\r\n        <div class=\"vertical-line\"></div>\r\n    </div>\r\n\r\n    \r\n    <div class=\"results\">\r\n        <div class=\"result-pair\">\r\n            <div class=\"result-header\">\r\n                გაყიდული პროდუქციის რაოდენობა:\r\n            </div>\r\n            <div class=\"result-result result-count\">\r\n                <div>{Object.keys(productsSold).length}</div>\r\n                <div style=\"width:20px;\"></div>\r\n                <button type=\"button\" class=\"btn btn-primary btn-details\" on:click={() => {showDetailedProducts = true}}>დეტალურად</button>\r\n            </div>\r\n        </div>\r\n        \r\n        <div class=\"result-info\">\r\n            <div class=\"result-info-header\">\r\n                წლიური\r\n            </div>  \r\n            \r\n            <div class=\"result-info-pairs\">\r\n                <div class=\"result-pair\">\r\n                    <div class=\"result-header\">\r\n                        მოგება\r\n                    </div>\r\n                    <div class=\"result-result result-winning\">\r\n                        {yearlyBenefit.toFixed(2)} ₾\r\n                    </div>\r\n                </div>\r\n        \r\n                <div class=\"result-pair\">\r\n                    <div class=\"result-header\">\r\n                        ნავაჭრი\r\n                    </div>\r\n                    <div class=\"result-result\">\r\n                        {yearlySellingPrice.toFixed(2)} ₾\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        \r\n        <div class=\"result-info\">\r\n            <div class=\"result-info-header\">\r\n                თვიური\r\n            </div>  \r\n            \r\n            <div class=\"result-info-pairs\">\r\n                <div class=\"result-pair\">\r\n                    <div class=\"result-header\">\r\n                        მოგება\r\n                    </div>\r\n                    <div class=\"result-result result-winning\">\r\n                        {monthlyBenefit.toFixed(2)} ₾\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"result-pair\">\r\n                    <div class=\"result-header\">\r\n                        ნავაჭრი\r\n                    </div>\r\n                    <div class=\"result-result\">\r\n                        {monthlySellingPrice.toFixed(2)} ₾\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"result-info\">\r\n            <div class=\"result-info-header\">\r\n                დღიური\r\n            </div>  \r\n            \r\n            <div class=\"result-info-pairs\">\r\n                <div class=\"result-pair\">\r\n                    <div class=\"result-header\">\r\n                        მოგება\r\n                    </div>\r\n                    <div class=\"result-result result-winning\">\r\n                        {dailyBenefit.toFixed(2)} ₾\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"result-pair\">\r\n                    <div class=\"result-header\">\r\n                        ნავაჭრი\r\n                    </div>\r\n                    <div class=\"result-result\">\r\n                        {dailySellingPrice.toFixed(2)} ₾\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n\r\n<DetailedProducts\r\nbind:show={showDetailedProducts}\r\nbind:products={detailedAmounts}\r\n/>",
    "<script>\r\n    import {ManagementService} from \"../services/management.service\";\r\n    import { onMount } from 'svelte';\r\n    import { ObjectHelper } from \"../utils/ObjectHelper\";\r\n    import AddPasswordModal from '../components/management/EditPasswordModal.svelte'\r\n    \r\n    const managementService = ManagementService.getInstance();\r\n    let managementExists = false, managementFound = false; \r\n\r\n    let showPasswordEditModal = false, passwordEditType = 'EDIT';\r\n\r\n    onMount(async () => {\r\n        const management = await managementService.findManagement();\r\n        managementFound = true;\r\n        \r\n        if (ObjectHelper.isNotNullOrUndefined(management.management)) {\r\n            managementExists = true;\r\n        }\r\n    });\r\n\r\n    function passwordAdded() {\r\n        managementExists = true;\r\n    }\r\n\r\n</script>\r\n\r\n<style>\r\n\r\n    #content {\r\n        width: 100%;\r\n        text-align: center;\r\n        height: 50%;\r\n    }\r\n\r\n    .button-content {\r\n        margin: 100px;\r\n    }\r\n\r\n</style>\r\n\r\n{#if managementFound}\r\n<div id=\"content\">  \r\n    <div class=\"button-content\">  \r\n        {#if !managementExists}\r\n            <!-- svelte-ignore a11y-missing-attribute -->\r\n            <button type=\"button\" class=\"btn btn-primary\" on:click={() => {\r\n                passwordEditType = 'ADD'; \r\n                showPasswordEditModal = true;\r\n            }}>პაროლის დამატება</button>\r\n        {:else}\r\n            <!-- svelte-ignore a11y-missing-attribute -->\r\n            <button type=\"button\" class=\"btn btn-primary\" on:click={() => { \r\n                passwordEditType = 'EDIT';\r\n                showPasswordEditModal = true;\r\n            }}>პაროლის შეცვლა</button>\r\n        {/if}\r\n    </div>   \r\n</div>\r\n{/if}\r\n\r\n<AddPasswordModal\r\nbind:show={showPasswordEditModal}\r\nbind:editType={passwordEditType}\r\non:passwordAdded={passwordAdded}\r\n/>",
    "<script>\r\n    import { ParameterService } from \"../services/parameter.service\";\r\n    import ParameterModal from \"../components/ParameterModal.svelte\"\r\n    import DeleteModal from \"../components/DeleteModal.svelte\"\r\n    import { onMount } from 'svelte';\r\n    \r\n    export let show = {};\r\n\r\n    const ParameterType = {\r\n        INTEGER: \"რიცხვი\",\r\n        STRING: \"ტექსტი\",\r\n        LIST: \"სია\"\r\n    }\r\n    \r\n    let parameterService = ParameterService.getInstance();\r\n\r\n    let columnNames = ['სახელი', 'აღწერა', 'ტიპი', 'მნიშვნელობა'];\r\n    let filterName = '', filterDescription = '', filterType = '', filterValue = '';\r\n    let showParameterModal = false, isChange = false, parameterModalSubmited = false;\r\n    let _id, name = null, description = null, parameterType = ParameterType.INTEGER, value = null;\r\n    let indexOfSelectedParameter;\r\n    let toDeleteId = null, deleteModalShow = false, deleteModalSubmited = false, indexOfParameterToDelete = null;\r\n\r\n    let parameters = [], allParameters = [];\r\n    onMount(async () => {\r\n        allParameters = await parameterService.findParameters();\r\n        parameters = allParameters;\r\n    });\r\n\r\n    function onChange(parameter, i) {\r\n        _id = parameter._id\r\n        name = parameter.name;\r\n        description = parameter.description;\r\n        parameterType = parameter.parameterType;\r\n        value = parameter.value;\r\n        showParameterModal = true;\r\n        isChange = true;\r\n        indexOfSelectedParameter = i;\r\n    }\r\n    \r\n    function clearFilters() {\r\n        filterName = '';\r\n        filterDescription = '';\r\n        filterType = '';\r\n        filterValue = '';\r\n    }\r\n\r\n    function filterParameters() {\r\n        parameters = allParameters.filter(param => param.name.toLowerCase().includes(filterName.toLowerCase())\r\n                                            && param.description.toLowerCase().includes(filterDescription.toLowerCase())\r\n                                            && param.parameterType.toLowerCase().includes(filterType.toLowerCase())\r\n                                            && param.value.toLowerCase().includes(filterValue.toLowerCase()));\r\n    }\r\n\r\n    function onDelete(parameterId, index) {\r\n        toDeleteId = parameterId;\r\n        deleteModalShow = true;\r\n        indexOfParameterToDelete = index;\r\n    }\r\n\r\n    $: {\r\n        if (parameterModalSubmited) {\r\n            parameterModalIsSubmited();\r\n        }\r\n\r\n        if (deleteModalSubmited) {\r\n            deleteModalIsSubmited();\r\n        }\r\n    }\r\n\r\n    function parameterModalIsSubmited() {\r\n        let changedParameter = {\r\n                _id,\r\n                name,\r\n                description,\r\n                parameterType,\r\n                value\r\n            }\r\n            if (!isChange) {\r\n                parameters = [changedParameter, ...parameters];\r\n                allParameters = [changedParameter, ...allParameters];\r\n            } else {\r\n                parameters[indexOfSelectedParameter]._id = changedParameter._id;\r\n                parameters[indexOfSelectedParameter].name = changedParameter.name;\r\n                parameters[indexOfSelectedParameter].description = changedParameter.description;\r\n                parameters[indexOfSelectedParameter].parameterType = changedParameter.parameterType;\r\n                parameters[indexOfSelectedParameter].value = changedParameter.value;\r\n            }\r\n            name = null;\r\n            description = null;\r\n            parameterType = ParameterType.INTEGER;\r\n            value = null;\r\n            parameterModalSubmited = false;\r\n    }\r\n\r\n    function deleteModalIsSubmited() {\r\n        parameters = [...parameters.slice(0, indexOfParameterToDelete), ...parameters.slice(indexOfParameterToDelete + 1)];\r\n        allParameters = allParameters.filter(param => param._id != toDeleteId);\r\n        deleteModalSubmited = false;\r\n    }\r\n\r\n</script>\r\n\r\n<style>\r\n    td {\r\n        border: 1px solid #fefefe;\r\n    }\r\n\r\n    th {\r\n        text-align: center;\r\n    }\r\n\r\n    .actionButtonsDiv {\r\n        display: flex;\r\n        justify-content: flex-end;\r\n    }\r\n\r\n    .actionButtons {\r\n        margin: 0 5px;\r\n    }\r\n\r\n    .actionsTh {\r\n        width: 1%;\r\n        padding: 2px;\r\n        padding-right: 5px;\r\n        text-align: end;\r\n    }\r\n\r\n    .toolbar {\r\n        margin: 10px 0;\r\n        display: flex;\r\n        justify-content: flex-start;\r\n        align-items: center;\r\n    }\r\n\r\n    .toolbar-item {\r\n        margin: 0 10px;\r\n        font-style: italic;\r\n    }\r\n\r\n    .leftTooltipIconDiv {\r\n        width: 27px;\r\n        font-weight: normal;\r\n    }\r\n</style>\r\n\r\n{#if show.showToolbar}\r\n<!-- svelte-ignore a11y-missing-attribute -->\r\n<iframe name=\"decoy_iframe\" style=\"display:none;\"></iframe>\r\n<form class=\"toolbar\" id=\"toolbar\" action=\"#\" target=\"decoy_iframe\" on:submit={filterParameters}>\r\n    <div class=\"form-group toolbar-item toolbar\">\r\n        <span>სახელი:&emsp;</span>\r\n        <input type=\"text\" class=\"form-control\" bind:value={filterName}>\r\n    </div>\r\n\r\n    <div class=\"form-group toolbar-item toolbar\">\r\n        <span>აღწერა:&emsp;</span>\r\n        <input type=\"text\" class=\"form-control\" bind:value={filterDescription}>\r\n    </div>\r\n\r\n    <div class=\"toolbar-item toolbar\">\r\n        <span>ტიპი:&emsp;</span>\r\n        <input type=\"text\" class=\"form-control\" bind:value={filterType}>\r\n    </div>\r\n\r\n    <div class=\"toolbar-item toolbar\">\r\n        <span>მნიშვნელობა:&emsp;</span>\r\n        <input type=\"text\" class=\"form-control\" bind:value={filterValue}>\r\n    </div>\r\n\r\n    <input type=\"submit\" style=\"height: 0px; width: 0px; border: none; padding: 0px;\" hidefocus=\"true\" />\r\n    \r\n    <!-- svelte-ignore a11y-missing-attribute -->\r\n    <div  title=\"ძებნა\">\r\n        <img src=\"images/search.png\" width=\"27px\" height=\"27px\" style=\"margin: 0 8px; cursor: pointer;\"\r\n            on:click={filterParameters}>\r\n    </div>\r\n    \r\n    <!-- svelte-ignore a11y-missing-attribute -->\r\n    <div  title=\"ფილტრის გასუფთავება\">\r\n        <img src=\"images/clearFilters.ico\" width=\"27px\" height=\"27px\" style=\"margin: 0 8px; cursor: pointer;\"\r\n            on:click={clearFilters}>\r\n    </div>\r\n</form>\r\n{/if}\r\n\r\n<table class=\"table\">\r\n    <!-- header -->\r\n    <thead>\r\n    <tr>\r\n        {#each columnNames as column}\r\n            <th scope=\"col\" style=\"width: 16%;\">{column}</th>\r\n        {/each}\r\n        <th class=\"actionsTh\" scope=\"col\">\r\n        <div class=\"leftTooltipIconDiv\" style=\"margin-left: auto;\" title=\"დამატება\">\r\n                <!-- svelte-ignore a11y-missing-attribute -->\r\n                <input type=\"image\" src=\"images/add.jpg\" width=\"27px\" height=\"27px\" on:click={()=>{\r\n                    isChange = false;\r\n                    showParameterModal = true;\r\n                }}>\r\n            </div>\r\n        </th>\r\n    </tr>\r\n    </thead>\r\n\r\n    <!-- values -->\r\n    <tbody>\r\n        {#each parameters as parameter, i}\r\n        <tr>\r\n            <td>{parameter.name}</td>\r\n            <td>{parameter.description}</td>\r\n            <td>{parameter.parameterType}</td>\r\n            <td>{parameter.value}</td>\r\n            <td style=\"padding-right: 5px;\">\r\n                <div class=\"actionButtonsDiv\">\r\n                    <!-- change button -->\r\n                    <div class=\"leftTooltipIconDiv\" style=\"margin-right: 10px;\" title=\"რედაქტირება\">\r\n                        <!-- svelte-ignore a11y-missing-attribute -->\r\n                        <input type=\"image\" src=\"images/edit.jpg\" class=\"actionButtons\" width=\"27px\" height=\"27px\"\r\n                            on:click={() => {\r\n                                onChange(parameter, i);\r\n                            }}>\r\n                    </div>\r\n\r\n                    <!-- delete button -->\r\n                    <div class=\"leftTooltipIconDiv\" style=\"margin-right: 5px;\" title=\"წაშლა\">\r\n                        <!-- svelte-ignore a11y-missing-attribute -->\r\n                        <input type=\"image\" src=\"images/delete.png\" class=\"actionButtons\" width=\"27px\" height=\"27px\"\r\n                            on:click={async () => {\r\n                                onDelete(parameter._id, i)\r\n                            }}>\r\n                    </div>\r\n                </div>\r\n            </td>\r\n        </tr>\r\n        {/each}\r\n    </tbody>\r\n</table>\r\n\r\n\r\n<ParameterModal\r\nbind:show={showParameterModal}\r\nbind:isChange={isChange}\r\ntitle={isChange ? 'რედაქტირება' : 'დამატება'}\r\nbind:submited={parameterModalSubmited}\r\nbind:_id={_id}\r\nbind:name={name}\r\nbind:description={description} \r\nbind:parameterType={parameterType} \r\nbind:value={value}\r\n/>\r\n\r\n<DeleteModal\r\nbind:show={deleteModalShow}\r\nbind:submited={deleteModalSubmited}\r\nbind:toDeleteId={toDeleteId}\r\nbind:service={parameterService}\r\n/>",
    "<script>\r\n    import {DeviceDetectorService} from \"../services/deviceDetector.service\";\r\n    import ProductModal from \"../components/ProductModal.svelte\";\r\n    import SellModal from \"../components/SellModal.svelte\";\r\n    import DeleteModal from \"../components/DeleteModal.svelte\";\r\n    import ProductReport from \"../components/reports/ProductReport.svelte\"\r\n    import {ProductService} from \"../services/product.service\";\r\n    import { ParameterService } from \"../services/parameter.service\";\r\n    import { onMount } from 'svelte';\r\n    import { navigate } from \"svelte-routing\";\r\n    import { ArrayHelper } from \"../utils/ArrayHelper\";\r\n    import { NumberHelper } from \"../utils/NumberHelper\";\r\n    import { AutoCompleteHelper } from \"../utils/AutoCompleteHelper\"\r\n\r\n    export let show = {};\r\n\r\n    const ParameterType = {\r\n        INTEGER: \"რიცხვი\",\r\n        STRING: \"ტექსტი\",\r\n        LIST: \"სია\"\r\n    }\r\n\r\n    let ProductType = [\r\n        \"სხვა\"\r\n    ]\r\n\r\n    let QuantityType = {\r\n        COUNT: \"ცალობითი\",\r\n        WEIGHT: \"წონითი\"\r\n    }\r\n    \r\n    let productService = ProductService.getInstance(), parameterService = ParameterService.getInstance();\r\n    \r\n    let columnNames = ['კოდი', 'სახელი', 'ტიპი', 'ჯამ. გასა. ფასი', 'ჯამ. ასა. ფასი', 'გასა. ფასი', 'ასა. ფასი', 'რაოდენობა', 'რაოდ. ტიპი', 'განახ. თარიღი', 'შექმნ. თარიღი'];\r\n    let toolbarShown = false, filterCode = '', filterName='', filterType='', filterStartPrice=null, filterEndPrice=null;\r\n    let showProductModal = false, isChange = false, showSellModal = false;\r\n    let _id, productCode = null, name = null, productType = ProductType[0], sellingPrice = null, \r\n            originalPrice = null, quantity = null, quantityType = QuantityType.COUNT, official = true;\r\n    let productModalSubmited = false, quantitiesFromProductModal = [];\r\n    let indexOfSelectedProduct;\r\n    let amountToSell = null;\r\n    let sellModalSubmited = false, availableAmount = null;\r\n    let toDeleteId = null, deleteModalShow = false, deleteModalSubmited = false, indexOfProductToDelete = null;\r\n\r\n    if(DeviceDetectorService.isBrowser) {\r\n        let url = new URL(window.location.href);\r\n        filterCode = url.searchParams.get('code') || '';\r\n        filterName = url.searchParams.get('name') || '';\r\n        filterType = url.searchParams.get('type') || '';\r\n        filterStartPrice = parseInt(url.searchParams.get('start')) || null;\r\n        filterEndPrice = parseInt(url.searchParams.get('end')) || null;\r\n        show.showToolbar = filterCode || filterName || filterType || filterEndPrice || filterStartPrice;\r\n    }\r\n\r\n    let products = [], allProducts = [], allProductCodes = [], allProductNames = [];\r\n    onMount(async () => {\r\n        allProducts = await productService.getProducts();\r\n        products = allProducts;\r\n        allProductCodes = allProducts.map(prod => prod.code);\r\n        allProductNames = allProducts.map(prod => prod.name);\r\n\r\n        initializeParameters();\r\n        if(show.showToolbar) {\r\n            filterProducts();\r\n        }\r\n    });\r\n\r\n    async function initializeParameters() {\r\n        let res = await parameterService.getParameter(\"productTypes\", ParameterType.LIST, [\"სხვა\"]);\r\n        ProductType = ('' + res.value).split(\",\");\r\n    }\r\n\r\n    function onChange(product, i) {\r\n        _id = product._id\r\n        productCode = product.code;\r\n        name = product.name;\r\n        productType = product.productType;\r\n        sellingPrice = product.sellingPrice;\r\n        originalPrice = product.originalPrice;\r\n        quantity = product.quantity;\r\n        quantityType = product.quantityType;\r\n        official = product.official;\r\n        quantitiesFromProductModal = product.quantity;\r\n        showProductModal = true;\r\n        isChange = true;\r\n        indexOfSelectedProduct = i;\r\n    }\r\n    \r\n    function clearFilters() {\r\n        filterCode = '';\r\n        filterName='';\r\n        filterType='';\r\n        filterStartPrice=null;\r\n        filterEndPrice=null;\r\n    }\r\n\r\n    function filterProducts() {\r\n        products = allProducts.filter(prod => prod.code.toLowerCase().includes(filterCode.toLowerCase())\r\n                                            && prod.name.toLowerCase().includes(filterName.toLowerCase())\r\n                                            && prod.productType.toLowerCase().includes(filterType.toLowerCase()) \r\n                                            && (filterStartPrice == null || prod.sellingPrice >= filterStartPrice)\r\n                                            && (filterEndPrice == null || prod.sellingPrice <= filterEndPrice));\r\n        let url = new URL(window.location.href);\r\n        url.searchParams.set('code', filterCode || '');\r\n        url.searchParams.set('name', filterName || '');\r\n        url.searchParams.set('type', filterType || '');\r\n        url.searchParams.set('start', filterStartPrice || '');\r\n        url.searchParams.set('end', filterEndPrice || '');\r\n        navigate(url.toString());\r\n    }\r\n\r\n    function onSell(product, i) {\r\n        _id = product._id;\r\n        productCode = product.code;\r\n        name = product.name;\r\n        productType = product.productType;\r\n        quantity = product.quantity;\r\n        quantityType = product.quantityType;\r\n        sellingPrice = product.sellingPrice;\r\n        originalPrice = product.originalPrice;\r\n        official = product.official;\r\n        indexOfSelectedProduct = i;\r\n        availableAmount = getWholeQuantity(product);\r\n        showSellModal = true;\r\n    }\r\n\r\n    function onDelete(productId, index) {\r\n        toDeleteId = productId;\r\n        deleteModalShow = true;\r\n        indexOfProductToDelete = index;\r\n    }\r\n\r\n    $: {\r\n        if (productModalSubmited) {\r\n            productModalIsSubmited();\r\n        }\r\n\r\n        if (sellModalSubmited) {\r\n            sellModalIsSubmited();\r\n        }\r\n\r\n        if (deleteModalSubmited) {\r\n            deleteModalIsSubmited();\r\n        }\r\n\r\n        if (show.showToolbar) {\r\n            if (!toolbarShown) {\r\n                setTimeout(() => {\r\n                    AutoCompleteHelper.autocomplete(document.getElementById(\"product-code-filter\"), allProductCodes, (v) => {\r\n                        filterCode = v;\r\n                        filterProducts();\r\n                    });\r\n                    AutoCompleteHelper.autocomplete(document.getElementById(\"product-name-filter\"), allProductNames, (v) => {\r\n                        filterName = v;\r\n                        filterProducts();\r\n                    });\r\n                }, 150);\r\n            }\r\n            toolbarShown = show.showToolbar;\r\n        } else {\r\n            toolbarShown = false;\r\n        }\r\n    }\r\n\r\n    function productModalIsSubmited() {\r\n        let changedProduct = {\r\n                _id,\r\n                code: productCode,\r\n                name,\r\n                productType: productType,\r\n                sellingPrice,\r\n                originalPrice: ArrayHelper.isNotEmpty(quantitiesFromProductModal) ? quantitiesFromProductModal[0].originalPrice : 0,\r\n                quantity: quantitiesFromProductModal,\r\n                quantityType,\r\n                official,\r\n                lastChangeDate: new Date()\r\n            }\r\n            if (!isChange) {\r\n                changedProduct['createDate'] = new Date();\r\n                products = [changedProduct, ...products];\r\n                allProducts = [changedProduct, ...allProducts];\r\n            } else {\r\n                products[indexOfSelectedProduct]._id = changedProduct._id;\r\n                products[indexOfSelectedProduct].code = changedProduct.code;\r\n                products[indexOfSelectedProduct].name = changedProduct.name;\r\n                products[indexOfSelectedProduct].productType = changedProduct.productType;\r\n                products[indexOfSelectedProduct].sellingPrice = changedProduct.sellingPrice;\r\n                products[indexOfSelectedProduct].originalPrice = changedProduct.originalPrice;\r\n                products[indexOfSelectedProduct].quantity = changedProduct.quantity;\r\n                products[indexOfSelectedProduct].quantityType = changedProduct.quantityType;\r\n                products[indexOfSelectedProduct].official = changedProduct.official;\r\n                products[indexOfSelectedProduct].lastChangeDate = new Date();\r\n            }\r\n            productCode = null;\r\n            name = null;\r\n            productType = ProductType[0];\r\n            sellingPrice = null;\r\n            originalPrice = null;\r\n            quantity = null;\r\n            quantityType = QuantityType.COUNT\r\n            productModalSubmited = false;\r\n    }\r\n\r\n    function sellModalIsSubmited() {\r\n        products[indexOfSelectedProduct].quantity = quantity;\r\n        products[indexOfSelectedProduct].originalPrice = originalPrice;\r\n        name = null;\r\n        sellModalSubmited = false;\r\n    }\r\n\r\n    function deleteModalIsSubmited() {\r\n        products = [...products.slice(0, indexOfProductToDelete), ...products.slice(indexOfProductToDelete + 1)];\r\n        allProducts = allProducts.filter(prod => prod._id != toDeleteId);\r\n        deleteModalSubmited = false;\r\n    }\r\n\r\n    function getDateString(date) {\r\n        date = new Date(date);\r\n        return date.getFullYear() + '-' + (date.getMonth() + 1) + '-' + date.getDate() + ' ' + date.getHours() + \":\" + date.getMinutes() + \":\" + date.getSeconds();\r\n    }\r\n\r\n    function getWholeQuantity(prod) {\r\n        return prod.quantity.reduce((sum1, qt) => { return sum1 + qt.quantity}, 0);\r\n    }\r\n\r\n</script>\r\n\r\n<style>\r\n    td {\r\n        border: 1px solid #fefefe;\r\n    }\r\n\r\n    th {\r\n        text-align: center;\r\n    }\r\n\r\n    .actionButtonsDiv {\r\n        display: flex;\r\n        justify-content: flex-end;\r\n    }\r\n\r\n    .actionButtons {\r\n        margin: 0 5px;\r\n    }\r\n\r\n    .actionsTh {\r\n        width: 1%;\r\n        padding: 2px;\r\n        padding-right: 5px;\r\n        text-align: end;\r\n    }\r\n\r\n    .toolbar {\r\n        margin: 10px 0;\r\n        display: flex;\r\n        justify-content: flex-start;\r\n        align-items: center;\r\n    }\r\n\r\n    .toolbar-item {\r\n        margin: 0 10px;\r\n        font-style: italic;\r\n    }\r\n\r\n    .leftTooltipIconDiv {\r\n        width: 27px;\r\n        font-weight: normal;\r\n    }\r\n\r\n    .sum-tr {\r\n        background-color: lightsteelblue;\r\n    }\r\n\r\n    .sum-td {\r\n        font-weight: bold;\r\n    }\r\n\r\n    .sum-empty-td {\r\n        border: none;\r\n    }\r\n\r\n    .financial-td {\r\n        text-align: end;\r\n    }\r\n\r\n</style>\r\n\r\n{#if show.showToolbar}\r\n<!-- svelte-ignore a11y-missing-attribute -->\r\n<iframe name=\"decoy_iframe\" style=\"display:none;\"></iframe>\r\n<form autocomplete=\"off\" class=\"toolbar\" id=\"toolbar\" action=\"#\" target=\"decoy_iframe\" on:submit={filterProducts}>\r\n    <div class=\"form-group toolbar-item toolbar autocomplete\">\r\n        <span>კოდი:&emsp;</span>\r\n        <input id=\"product-code-filter\" type=\"text\" class=\"form-control\" bind:value={filterCode}>\r\n    </div>\r\n    \r\n    <div class=\"form-group toolbar-item toolbar  autocomplete\">\r\n        <span>სახელი:&emsp;</span>\r\n        <input id=\"product-name-filter\" type=\"text\" class=\"form-control\" bind:value={filterName}>\r\n    </div>\r\n\r\n    <div class=\"toolbar-item toolbar\">\r\n        <span>ტიპი:&emsp;</span>\r\n        <input type=\"text\" class=\"form-control\" bind:value={filterType}>\r\n    </div>\r\n\r\n    <div class=\"toolbar-item toolbar\">\r\n        <span>საწყისი&nbsp;ფასი:&emsp;</span>\r\n        <input type=\"number\" class=\"form-control\" bind:value={filterStartPrice}>\r\n    </div>\r\n\r\n    <div class=\"toolbar-item toolbar\">\r\n        <span>საბოლოო&nbsp;ფასი:&emsp;</span>\r\n        <input type=\"number\" class=\"form-control\" bind:value={filterEndPrice}>\r\n    </div>\r\n\r\n    <input type=\"submit\" style=\"height: 0px; width: 0px; border: none; padding: 0px;\" hidefocus=\"true\" />\r\n    \r\n    <!-- svelte-ignore a11y-missing-attribute -->\r\n    <div title=\"ძებნა\">\r\n        <img src=\"images/search.png\" width=\"27px\" height=\"27px\" style=\"margin: 0 8px; cursor: pointer;\"\r\n            on:click={filterProducts}>\r\n    </div>\r\n    \r\n    <!-- svelte-ignore a11y-missing-attribute -->\r\n    <div title=\"ფილტრის გასუფთავება\">\r\n        <img src=\"images/clearFilters.ico\" width=\"27px\" height=\"27px\" style=\"margin: 0 8px; cursor: pointer;\"\r\n            on:click={clearFilters}>\r\n    </div>\r\n</form>\r\n{/if}\r\n\r\n<table class=\"table\">\r\n    <thead>\r\n    <tr>\r\n        {#each columnNames as column}\r\n            <th scope=\"col\" style=\"width: 16%;\">{column}</th>\r\n        {/each}\r\n        <th class=\"actionsTh\" scope=\"col\">\r\n            <div class=\"leftTooltipIconDiv\" style=\"margin-left: auto;\" title=\"პროდუქტის დამატება\">\r\n                <!-- svelte-ignore a11y-missing-attribute -->\r\n                <input type=\"image\" src=\"images/add.jpg\" width=\"27px\" height=\"27px\" on:click={()=>{\r\n                    isChange = false;\r\n                    quantitiesFromProductModal = [];\r\n                    showProductModal = true;\r\n                }}>\r\n            </div>\r\n        </th>\r\n    </tr>\r\n    </thead>\r\n    <tbody>\r\n        <tr class=\"sum-tr\">\r\n            <td class=\"sum-empty-td sum-td\">ჯამური:</td>\r\n            <td class=\"sum-empty-td sum-td\"></td>\r\n            <td class=\"sum-empty-td sum-td\"></td>\r\n            <td class=\"financial-td sum-td\">{products.reduce((sum, prod) => { return sum + (getWholeQuantity(prod) * prod.sellingPrice) }, 0).toFixed(2)} ₾</td>\r\n            <td class=\"financial-td sum-td\">{products.reduce((sum, prod) => { return sum + (ArrayHelper.isNotEmpty(prod.quantity) ? prod.quantity.reduce((sum1, qt) => { return sum1 + qt.quantity * qt.originalPrice}, 0) : 0) }, 0).toFixed(2)} ₾</td>\r\n            <td class=\"financial-td sum-td\">{products.reduce((sum, prod) => { return sum + prod.sellingPrice }, 0).toFixed(2)} ₾</td>\r\n            <td class=\"financial-td sum-td\">{products.reduce((sum, prod) => { return sum + (NumberHelper.isNonZero(prod.originalPrice) ? prod.originalPrice : 0)}, 0).toFixed(2)} ₾</td>\r\n            <td class=\"sum-td\">{\r\n                products.reduce((sum, prod) => { return prod.quantityType == QuantityType.COUNT ? sum + getWholeQuantity(prod) : sum }, 0) + \" ც; \" +\r\n                products.reduce((sum, prod) => { return prod.quantityType == QuantityType.COUNT ? sum : sum + getWholeQuantity(prod) }, 0).toFixed(3) + \" კგ.\"\r\n            }\r\n            </td>\r\n            <td class=\"sum-empty-td sum-td\"></td>\r\n            <td class=\"sum-empty-td sum-td\"></td>\r\n            <td class=\"sum-empty-td sum-td\"></td>\r\n            <td class=\"sum-empty-td sum-td\"></td>\r\n        </tr>\r\n        {#each products as product, i}\r\n        <tr>\r\n            <td>{product.code}</td>\r\n            <td>{product.name}</td>\r\n            <td>{product.productType}</td>\r\n            <td class=\"financial-td\">{(getWholeQuantity(product) * product.sellingPrice).toFixed(2)} ₾</td>\r\n            <td class=\"financial-td\">{ArrayHelper.isNotEmpty(product.quantity) ? (getWholeQuantity(product) * product.originalPrice).toFixed(2) : 0} ₾</td>\r\n            <td class=\"financial-td\">{product.sellingPrice.toFixed(2)} ₾</td>\r\n            <td class=\"financial-td\">{NumberHelper.isNonZero(product.originalPrice) ? product.originalPrice.toFixed(2) : 0} ₾</td>\r\n            <td>{((getWholeQuantity(product)).toFixed(product.quantityType == QuantityType.WEIGHT ? 3 : 0)) +\r\n                 (product.quantityType == QuantityType.WEIGHT ? \" კგ.\" : \" ც.\")}</td>\r\n            <td>{product.quantityType}</td>\r\n            <td>{getDateString(product.lastChangeDate)}</td>\r\n            <td>{getDateString(product.createDate)}</td>\r\n            <td style=\"padding-right: 5px;\">\r\n                <div class=\"actionButtonsDiv\">\r\n                    <div class=\"leftTooltipIconDiv\"  title=\"გაყიდვა\" style=\"margin-right: 10px;\">\r\n                        <!-- svelte-ignore a11y-missing-attribute -->\r\n                        <input type=\"image\" src=\"images/sell.png\" class=\"actionButtons\" width=\"27px\" height=\"27px\"\r\n                            on:click={() => {\r\n                                onSell(product, i);\r\n                            }}>\r\n                    </div>\r\n                    <div class=\"leftTooltipIconDiv\"  title=\"რედაქტირება\" style=\"margin-right: 10px;\">\r\n                        <!-- svelte-ignore a11y-missing-attribute -->\r\n                        <input type=\"image\" src=\"images/edit.jpg\" class=\"actionButtons\" width=\"27px\" height=\"27px\"\r\n                            on:click={() => {\r\n                                onChange(product, i);\r\n                            }}>\r\n                    </div>\r\n                    <div class=\"leftTooltipIconDiv\"  title=\"წაშლა\" style=\"margin-right: 5px;\">\r\n                        <!-- svelte-ignore a11y-missing-attribute -->\r\n                        <input type=\"image\" src=\"images/delete.png\" class=\"actionButtons\" width=\"27px\" height=\"27px\"\r\n                            on:click={async () => {\r\n                                onDelete(product._id, i)\r\n                            }}>\r\n                    </div>\r\n                </div>\r\n            </td>\r\n        </tr>\r\n        {/each}\r\n    </tbody>\r\n</table>\r\n\r\n<ProductModal \r\nbind:editedQuantities={quantitiesFromProductModal}\r\nbind:show={showProductModal}\r\nbind:isChange={isChange}\r\ntitle={isChange ? 'რედაქტირება' : 'დამატება'}\r\nbind:_id={_id}\r\nbind:productCode={productCode}\r\nbind:name={name}\r\nbind:productType={productType} \r\nbind:sellingPrice={sellingPrice} \r\nbind:originalPrice={originalPrice}\r\nbind:quantity={quantity}\r\nbind:quantityType={quantityType}\r\nbind:official={official}\r\nbind:submited={productModalSubmited}\r\n/>\r\n\r\n<SellModal\r\nbind:show={showSellModal}\r\nbind:_id={_id}\r\nbind:productName={name}\r\nbind:amount={amountToSell}\r\nbind:submited={sellModalSubmited}\r\nbind:quantity={quantity}\r\nsellingPrice={sellingPrice}\r\nbind:originalPrice={originalPrice}\r\nbind:quantityType={quantityType}\r\nbind:availableAmount={availableAmount}\r\n/>\r\n\r\n<DeleteModal\r\nbind:show={deleteModalShow}\r\nbind:submited={deleteModalSubmited}\r\nbind:toDeleteId={toDeleteId}\r\nbind:service={productService}\r\n/>\r\n\r\n<ProductReport\r\nbind:show={show.showProductReport}\r\n/>",
    "<script>\r\n    import { onMount } from \"svelte\";\r\n    import { ProductService } from \"../services/product.service\"\r\n    import ChooseProductModal from \"../components/ChooseProductModal.svelte\"\r\nimport WarningModal from \"../components/WarningModal.svelte\";\r\n\r\n    export let data;\r\n    const columnNames = [\"კოდი\", \"სახელი\", \"საცალო ფასი\", \"რაოდენობა\", \"ტიპი\", \"ჯამური ფასი\"];\r\n    const productService = ProductService.getInstance();\r\n    let quantityOrPriceChangeEvent;\r\n    let totalPriceChangeEvent;\r\n    let products;\r\n    let showButtons = false;\r\n    let productsMap = new Map();\r\n    let items = new Map();\r\n    let pricesByKey = new Map();\r\n    let totalPricesByKey = new Map();\r\n    let namesByKey = new Map();\r\n    let keysByName = new Map();\r\n    let keys = new Set();\r\n    let showAddModal = false;\r\n    let chosenCode;\r\n    let manuallyAdded = false;\r\n    let sum = 0;\r\n    let showWarningModal = false;\r\n    let warningModalMessage = \"\";\r\n    let arrKeys = [];\r\n\r\n    $: if(data.add) {\r\n        setTimeout(() => {\r\n            if(!products) return;\r\n            if(!productsMap[data.keysPressed]) {\r\n                //maybe add more later\r\n                return;\r\n            }\r\n            if(items[data.keysPressed]) {\r\n                items[data.keysPressed]++;\r\n            }\r\n            else {\r\n                items[data.keysPressed] = 1;\r\n                keys.add(data.keysPressed);\r\n                arrKeys = Array.from(keys);\r\n                showButtons = keys.size;\r\n            }\r\n            data.keysPressed = \"\";\r\n            dispatchEvent(quantityOrPriceChangeEvent); \r\n        }, 40);\r\n        data.add = false;\r\n    }\r\n\r\n    $: if(manuallyAdded) {\r\n        if(items[chosenCode]) {\r\n            items[chosenCode]++;\r\n        }\r\n        else {\r\n            items[chosenCode] = 1;\r\n            keys.add(chosenCode);\r\n            arrKeys = Array.from(keys);\r\n            showButtons = keys.size;\r\n        }\r\n        dispatchEvent(quantityOrPriceChangeEvent); \r\n        manuallyAdded = false;\r\n        chosenCode = undefined;\r\n    }\r\n\r\n    onMount(async () => {\r\n        products = await productService.getProducts();\r\n        products.forEach(product => {\r\n            productsMap[product.code] = product;\r\n            pricesByKey[product.code] = product.sellingPrice;\r\n            namesByKey.set(product.code, product.name);\r\n            keysByName.set(product.name, product.code);\r\n        });\r\n        quantityOrPriceChangeEvent = new Event('quantityorprice')\r\n        totalPriceChangeEvent = new Event(\"totalprice\");\r\n        addEventListener('quantityorprice', () => {\r\n            sum = 0;\r\n            keys.forEach((key) => {\r\n                let max = getWholeQuantity(productsMap[key]);\r\n                if(items[key] > max) \r\n                    items[key] = max;\r\n                totalPricesByKey[key] = items[key] * pricesByKey[key];\r\n                sum += totalPricesByKey[key];\r\n            });\r\n        });\r\n        addEventListener('totalprice', () => {\r\n            sum = 0;\r\n            keys.forEach((key) => {\r\n                items[key] = totalPricesByKey[key] / pricesByKey[key];\r\n                sum += totalPricesByKey[key];\r\n            });\r\n        });\r\n    }); \r\n\r\n    function onDelete(key) {\r\n        items[key] = 0;\r\n        sum -= totalPricesByKey[key];\r\n        pricesByKey[key] = productsMap[key].sellingPrice;\r\n        keys.delete(key);\r\n        arrKeys = Array.from(keys);\r\n        showButtons = keys.size;\r\n    }\r\n\r\n    function onFocus(event) {\r\n        event.path[0].select();\r\n        setTimeout(()=>{\r\n            event.path[0].blur();\r\n        }, 10000);\r\n    }\r\n\r\n    function onDiscard() {\r\n        keys.forEach((key) => {\r\n            onDelete(key);\r\n        });\r\n    }\r\n\r\n    function addManually() {\r\n        showAddModal = true;\r\n    }\r\n\r\n    function getWholeQuantity(prod) {\r\n        return prod.quantity.reduce((sum1, qt) => { return sum1 + qt.quantity}, 0);\r\n    }\r\n\r\n    async function onSell() {\r\n        keys.forEach(async (key) => {\r\n            let res = await productService.sellProduct(productsMap[key]._id, items[key], pricesByKey[key], null);\r\n            if (res.status === 200) {\r\n                productsMap[key].quantity = res.newQuantity;\r\n            } else {\r\n                warningModalMessage = 'დაფიქსირდა შეცდომა პროდუქტის გაყიდვიდსას!'\r\n                showWarningModal = true;\r\n                return;\r\n            }\r\n            onDiscard();\r\n        });\r\n        sum = 0;\r\n    }\r\n\r\n    function throwTotalPriceChangeEvent() {\r\n        dispatchEvent(totalPriceChangeEvent);     \r\n    }\r\n\r\n    function throwQuantityOrPriceChangeEvent() {\r\n        dispatchEvent(quantityOrPriceChangeEvent);\r\n    }\r\n</script>\r\n\r\n<style>\r\n    .leftTooltipIconDiv {\r\n        width: 27px;\r\n        font-weight: normal;\r\n    }\r\n\r\n    .financial-input-div {\r\n        display: flex;\r\n        flex-direction: row;\r\n        align-items: center;\r\n    }\r\n\r\n    .financial-input-div > div {\r\n        font-size: 22px;\r\n        font-weight: bold;\r\n        font-style: italic;\r\n    }\r\n\r\n    .sum-tr {\r\n        background-color: lightsteelblue;\r\n    }\r\n\r\n    .sum-td {\r\n        font-weight: bold;\r\n    }\r\n\r\n    .sum-empty-td {\r\n        border: none;\r\n    }\r\n\r\n    .financial-td {\r\n        border-top: 0px;\r\n        text-align: end;\r\n    }\r\n\r\n    .confirm-buttons {\r\n        text-align: center;\r\n    }\r\n</style>\r\n\r\n<table class=\"table\">\r\n    <thead>\r\n    <tr>\r\n        {#each columnNames as column}\r\n            <th scope=\"col\" style=\"width: 14%;\">{column}</th>\r\n        {/each}\r\n        <th class=\"actionsTh\" scope=\"col\">\r\n            <div class=\"leftTooltipIconDiv\" style=\"margin-left: auto;\" title=\"დამატება\">\r\n                <!-- svelte-ignore a11y-missing-attribute -->\r\n                <input type=\"image\" src=\"images/add.jpg\" width=\"27px\" height=\"27px\" on:click={addManually}>\r\n            </div>\r\n        </th>\r\n    </tr>\r\n    </thead>\r\n    <tbody>\r\n        {#each arrKeys as key, i}\r\n        <tr>\r\n            <td>{key}</td>\r\n            <td>{productsMap[key].name}</td>\r\n            <td>\r\n                <div class=\"financial-input-div\">\r\n                    <input type=\"number\" class=\"form-control\" bind:value={pricesByKey[key]} on:focus={onFocus} on:keyup={throwQuantityOrPriceChangeEvent} on:click={throwQuantityOrPriceChangeEvent}>\r\n                   <div>&nbsp;₾</div>\r\n                </div>\r\n            </td>\r\n            <td>\r\n                <input type=\"number\" class=\"form-control\" bind:value={items[key]} on:focus={onFocus} on:keyup={throwQuantityOrPriceChangeEvent} on:click={throwQuantityOrPriceChangeEvent}>\r\n            </td>\r\n            <td>{productsMap[key].quantityType}</td>\r\n            <td>\r\n                <div class=\"financial-input-div\">\r\n                    <input type=\"number\" class=\"form-control\" bind:value={totalPricesByKey[key]} on:focus={onFocus} on:keyup={throwTotalPriceChangeEvent} on:click={throwTotalPriceChangeEvent}>\r\n                    <div>&nbsp;₾</div>\r\n                </div>\r\n            </td>\r\n            <td style=\"padding-right: 5px;\">\r\n                <div class=\"actionButtonsDiv\">\r\n                    <div class=\"leftTooltipIconDiv\" title=\"წაშლა\" style=\"margin-right: 5px;\">\r\n                        <!-- svelte-ignore a11y-missing-attribute -->\r\n                        <input type=\"image\" src=\"images/delete.png\" class=\"actionButtons\" width=\"27px\" height=\"27px\"\r\n                            on:click={() => {\r\n                                onDelete(key);\r\n                            }}>\r\n                    </div>\r\n                </div>\r\n            </td>\r\n        </tr>\r\n        {/each}\r\n        <tr class=\"sum-tr\">\r\n            <td class=\"sum-empty-td sum-td\">ჯამი:</td>\r\n            <td class=\"sum-empty-td sum-td\"></td>\r\n            <td class=\"sum-empty-td sum-td\"></td>\r\n            <td class=\"sum-empty-td sum-td\"></td>\r\n            <td class=\"sum-empty-td sum-td\"></td>\r\n            <td class=\"financial-td sum-td\">{sum} ₾</td>\r\n            <td class=\"sum-empty-td sum-td\"></td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n\r\n{#if showButtons}\r\n    <div class=\"confirm-buttons\">\r\n        <button class=\"btn btn-primary confirmButton\" style=\"margin-right: 20px;\" on:click={onSell}>გაყიდვა</button>\r\n        <button class=\"btn btn-primary closeButton\" on:click={onDiscard}>გაუქმება</button>\r\n    </div>\r\n{/if}\r\n\r\n{#if showAddModal}\r\n    <ChooseProductModal \r\n        bind:show={showAddModal} \r\n        bind:products={namesByKey} \r\n        bind:reverseProducts={keysByName} \r\n        bind:code={chosenCode}\r\n        bind:added={manuallyAdded}\r\n    ></ChooseProductModal>\r\n{/if}\r\n\r\n{#if showWarningModal}\r\n    <WarningModal\r\n        bind:show={showWarningModal}\r\n        bind:message={warningModalMessage}\r\n    ></WarningModal>\r\n{/if}"
  ],
  "names": [],
  "mappings": "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"
}